const text = `
<template>
	<style>
		:host {
			position: absolute;
		}
		.card {
			width: 150px;
			/*height: 220px;*/
			background-color: #222;
			border-radius: 10px;
			/*box-shadow: 16px 16px 10px black;*/
			color: white;
			/*--title-display: flex;*/
		}
		.title {
			height: 30px;
			border-radius: 10px 10px 0 0;
			background: linear-gradient(to right top, #84fab0 10%, #8fd3f4);

			display: flex;
			justify-content: center;
			align-items: center;

			cursor: grab;
			user-select: none;
		}
		.title:active {
			cursor: grabbing;
		}
		:host([data-title="0"]) :is(.title, .title + .close) {
			display: none;
		}
		.close {
			display: flex;
			justify-content: center;
			align-items: center;
			width: 20px;
			height: 20px;
			position: absolute;
			top:5px;
			right: 5px;
			user-select: none;
		}

		.close:hover {
			outline: 1px solid black;
		}
		.body{
			display: flex;
			justify-content: space-between;
			padding-block: 10px;
		}

		.left, .right {
			display: flex;
			flex-direction: column;
			gap:20px;
		}
	</style>
	<div class="card">
		<slot class="title" name="title"></slot>
		<div class="close">Ã—</div>
		<div class="body">
			<slot class="left" name="input"></slot>
			<slot class="right" name="output"></slot>
		</div>
	</div>
</template>
`;

const parser = new DOMParser();
const dom = parser.parseFromString(text, 'text/html');
const template = dom.querySelector('template');

customElements.define("blueprint-block", class extends HTMLElement{
	constructor(){
		super();
		const shadowRoot = this.attachShadow({mode:'open'});
		shadowRoot.appendChild(template.content.cloneNode(true));
	}
});