"use strict";

class RenderTarget{
	constructor(width, height){
		this.width = width;
		this.height = height;
	}

	active(gl){
		gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer || this.createFrameBuffer(gl));
	}

	dispose(){
		if(!this.frameBuffer){
			return;
		}
		let {gl} = this;
		gl.deleteFramebuffer(this.frameBuffer);
		gl.deleteRenderbuffer(this.colorBuffer);
		gl.deleteRenderbuffer(this.depthBuffer);
		this.frameBuffer = null;
	}

	createFrameBuffer(gl){
		this.gl = gl;

		this.colorBuffer = gl.createRenderbuffer();
		this.depthBuffer = gl.createRenderbuffer();
		gl.bindRenderbuffer(gl.RENDERBUFFER, this.colorBuffer);
		gl.renderbufferStorage(gl.RENDERBUFFER, gl.RGBA8, this.width, this.height);
		gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthBuffer);
		gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, this.width, this.height);
		gl.bindRenderbuffer(gl.RENDERBUFFER, null);

		this.frameBuffer = gl.createFramebuffer();
		gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);
		gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.RENDERBUFFER, this.colorBuffer);
		gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.RENDERBUFFER, this.depthBuffer);
		gl.bindFramebuffer(gl.FRAMEBUFFER, null);

		return this.frameBuffer;
	}
}

module.exports = RenderTarget;