"use strict";

const {DepthRenderTarget} = require("../rendertargets");
const DisplayObject3D = require("../DisplayObject3D");
const {Camera3D, Lens} = require("cameras");

class DirectionLight3D extends DisplayObject3D
{
	constructor(view3d){
		super();

		this.w = 2048;
		this.h = 2048;

		let lens = Lens.OrthoLH(this.w, this.h, -1000, 1000);
		let camera = new Camera3D(lens);
		let rotation = camera.rotation;
		rotation.rotateAxisX(120 * Math.PI / 180);
		rotation.rotateAxisZ(-90 * Math.PI / 180);
		camera.rotation = rotation;
		this.camera = camera;
		this.shadowRenderTarget = new DepthRenderTarget(this.w, this.h);
	}

	drawShadowMap(gl, drawUnitList){
		this.hasShadows = drawUnitList.length > 0;
		if(!this.hasShadows)return;
		this.shadowRenderTarget.active(gl);
		gl.clear(gl.DEPTH_BUFFER_BIT);
		gl.viewport(0, 0, this.w, this.h);
		gl.renderQueue.draw(this.camera, drawUnitList);
	}

	collectDrawUnits(collector, gl, mode){
		collector.addLight(this);
	}
}

module.exports = DirectionLight3D;