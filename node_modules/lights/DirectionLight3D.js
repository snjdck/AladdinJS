"use strict";

class DirectionLight3D
{
	constructor(view3d){
		const {canvas, gl} = view3d;

		this.shadowDepthBuffer = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, this.shadowDepthBuffer);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.DEPTH_COMPONENT32F, 2048, 2048, 0, gl.DEPTH_COMPONENT, gl.FLOAT, null);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);
		gl.bindTexture(gl.TEXTURE_2D, null);

		this.frameBuffer = gl.createFramebuffer();
		gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);
		gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this.shadowDepthBuffer, 0);
		gl.bindFramebuffer(gl.FRAMEBUFFER, null);
	}

	drawShadowMap(){
		gl.bindFramebuffer(gl.FRAMEBUFFER, this.frameBuffer);

		gl.clear(gl.DEPTH_BUFFER_BIT);
	}

	drawLight(){

	}
}

module.exports = DirectionLight3D;