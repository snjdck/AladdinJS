'use strict';

const fs = require('fs');
const path = require('path');
const {builtinModules, createRequireFromPath:createRequire} = require('module');
const main = require.resolve(process.argv[2]);
const debugFlag = process.argv.includes('--debug');
const relative = (root => file => path.relative(root, file))(path.dirname(main));
const addTab = v => v.replace(/\n|^/g, '$&\t');
const pattern = /(?<=^|\W)require\s*\(\s*("|')(.+?)\1\s*\)/g;
const fileList = [];

function load(file){
	let index = fileList.findIndex(v => v.file == file);
	if(index >= 0)return index;
	const info = {file};
	const data = fs.readFileSync(file, 'utf8');
	index = fileList.length;
	fileList.push(info);
	if(file.endsWith('.js')){
		const _require = createRequire(file);
		info.data = data.replace(pattern, (_0, _1, _2) => {
			const name = _require.resolve(_2);
			if(builtinModules.includes(name))return _0;
			return debugFlag
				? `__webpack_require__(/* ${_2} */ ${load(name)})`
				: `__webpack_require__(${load(name)})`;
		});
	}else if(file.endsWith('.json')){
		info.data = 'module.exports = ' + data;
	}else{
		console.error(file);
	}
	return index;
}

const genOutput = modules => `'use strict';
(function(modules){
	const installedModules = {};
	function __webpack_require__(moduleId){
		if(installedModules[moduleId])return installedModules[moduleId].exports;
		const module = installedModules[moduleId] = {i:moduleId, l:false, exports:{}};
		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
		module.l = true;
		return module.exports;
	}
	return __webpack_require__(0);
})([${
debugFlag
? modules.map((v, i) => `function(module, exports, __webpack_require__){//${i}, ${relative(v.file)}\n${addTab(v.data)}\n}`)
: modules.map(v => `function(module, exports, __webpack_require__){\n${v.data}\n}`)
}]);`;

load(main);
fs.writeFileSync('bundle.js', genOutput(fileList));
