'use strict';

function isNumber(value){
	return '0' <= value && value <= '9';
}

function isOperator(value){
	return true;
}
/*
function isQuote(value){
	return value == '(' || value == ')';
}
*/
function order(value){
	switch(value){
		case '*': return 1;
		case '/': return 1;
	}
	return 0;
}

function composeDir(value){
	switch(value){
		case '*': return 1;
		case '/': return 1;
		case '+': return -1;
		case '-': return -1;
	}
	return 0;
}

function cast(input){
	const outputQueue = [];
	const operatorStack = [];
	for(const char of input){
		if(isNumber(char)){
			outputQueue.push(char);
			continue;
		}
		if(char == '('){
			operatorStack.push(char);
			continue;
		}
		if(char == ')'){
			for(;;){
				let v = operatorStack.pop();
				if(v == '(')break;
				outputQueue.push(v);
			}
			continue;
		}
		if(isOperator(char)){
			while(operatorStack.length > 0 && operatorStack[operatorStack.length-1] != '('){
				const diff = order(char) - order(operatorStack[operatorStack.length-1]);
				if(diff < 0 || (diff == 0 && composeDir(char) == -1)){//left associative
					outputQueue.push(operatorStack.pop());
					continue;
				}
				break;
			}
			operatorStack.push(char);
			continue;
		}
	}
	while(operatorStack.length > 0)outputQueue.push(operatorStack.pop());
	return outputQueue.join('');
}

console.log(cast('1+((2+3)*4)-5') == '123+4*+5-')
console.log(cast('1+5+2*(3-8)*4') == '15+238-4**+')