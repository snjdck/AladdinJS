"use strict";

const emptyFn = () => {};

class ObjectCache
{
	constructor(factory, resetFn=null){
		//this.refCache = [];
		this.getCache = [];
		this.outCache = [];
		this.factory = factory;
		this.resetFn = resetFn || emptyFn;
	}

	getOut(){
		let {getCache, outCache} = this;
		let object = getCache.pop() || this.create();
		outCache.push(object);
		return object;
	}

	putIn(object){
		//assert(this.refCache.includes(object));
		let {getCache, outCache, resetFn} = this;
		let index = outCache.indexOf(object);
		console.assert(index >= 0);
		outCache.splice(index, 1);
		getCache.push(object);
		resetFn(object);
	}

	putAllIn(){
		let {getCache, outCache, resetFn} = this;
		getCache.push(...outCache);
		outCache.forEach(resetFn);
		outCache.length = 0;
	}

	create(){
		return this.factory();
	}
}

module.exports = ObjectCache;