"use strict";

const assert = require("assert");
const emptyFn = () => {};

class ObjectCache
{
	constructor(type, resetFn=null, args=null){
		this.refCache = [];
		this.getCache = [];
		this.outCache = [];
		this.type = type;
		this.args = args || [];
		this.resetFn = resetFn || emptyFn;
	}

	getOut(){
		let {getCache, outCache} = this;
		let object = getCache.pop() || this.create();
		outCache.push(object);
		return object;
	}

	putIn(object){
		assert(this.refCache.includes(object));
		let {getCache, outCache, resetFn} = this;
		let index = outCache.indexOf(object);
		assert(index >= 0);
		outCache.splice(index, 1);
		getCache.push(object);
		resetFn(object);
	}

	putAllIn(){
		let {getCache, outCache, resetFn} = this;
		getCache.push(...outCache);
		outCache.forEach(resetFn);
		outCache.length = 0;
	}

	create(){
		let object = new this.type(...this.args);
		this.refCache.push(object);
		return object;
	}
}

module.exports = ObjectCache;