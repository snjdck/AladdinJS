
function matchFn(head, tail, fn){
	const pattern = new RegExp(head + tail);
	const replace = (...args0) => {
		const value = args0[0];
		const {index} = Array.from(value.matchAll(head)).pop();
		return value.slice(0, index) + value.slice(index).replace(pattern, (...args1) => {
			return fn(...args1.slice(0, -2), args0[args0.length-2] + index, args0[args0.length-1]);
		});
	}
	return text => {
		for(;;){
			const test = text.replace(pattern, replace);
			if(text == test)return text;
			text = test;
		}
	}
}

const escapeColor = matchFn(`\\[(#[0-9a-fA-F]{1,6})\\s`, `(.+?)\\]`, "<font color='$1'>$2</$1font>");
const escapeHtml = matchFn(`<(\\w+).*?>`, `(.+?)</\\1>`, (a, b, c, offset, text) => {
	console.log('=====',a, b, c, offset, text)
	return '%'.repeat(a.length)
})

//console.log(escapeColor(`[#fff abc] def [#000 ghi]`))
//console.log(escapeColor(`[#f00 123[#0f0 45[#00f @@]6] 789]end`))
console.log(escapeHtml(`<div>abc<span>def</span>ghi</div>`))
console.log((`<div>abc<span>def</span>ghi</div>`))