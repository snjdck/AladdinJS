
const charList = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

const encode = data => {
	let output = [];
	for(let i=0, n=data.length; i<n; i+=3){
		let value = data[i] << 16 | data[i+1] << 8 | data[i+2];

		let t1 = value >> 18;
		let t2 = value >> 12 & 0x3F;
		let t3 = value >>  6 & 0x3F;
		let t4 = value       & 0x3F;

		if (i+1 >= n) t3 = 64;
		if (i+2 >= n) t4 = 64;

		output.push(
			charList.charAt(t1),
			charList.charAt(t2),
			charList.charAt(t3),
			charList.charAt(t4)
		);
	}
	return output.join('');
};

const decode = data => {
	let output = [];
	for(let i=0, n=data.length; i<n; i+=4){
		let t1 = charList.indexOf(data.charAt(i));
		let t2 = charList.indexOf(data.charAt(i+1));
		let t3 = charList.indexOf(data.charAt(i+2));
		let t4 = charList.indexOf(data.charAt(i+3));

		let value = t1 << 18 | t2 << 12 | t3 << 6 | t4;

		output.push(value >> 16);

		if (t3 < 64) output.push(value >> 8 & 0xFF);
		if (t4 < 64) output.push(value      & 0xFF);
	}
	return output;
};

if(typeof Buffer === 'function'){
	exports.encode = v => (Buffer.isBuffer(v) ? v : Buffer.from(v)).toString('base64');
	exports.decode = v => Buffer.from(v, 'base64');
}else{
	exports.encode = (encoder => data => {
		if(typeof data === 'string'){
			data = encoder.encode(data);
		}else if(Array.isArray(data)){
			data = Uint8Array.from(data);
		}else if(data instanceof ArrayBuffer){
			data = new Uint8Array(data);
		}else if(!(data instanceof Uint8Array)){
			return;
		}
		return encode(data);
	})(new TextEncoder());
	exports.decode = decode;
}
