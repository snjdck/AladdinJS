'use strict';

const helpFn = fn => function(data, w, h, result){
	if(!result){
		result = [];
	}
	for(let j=0; j<h; ++j){
		for(let i=0; i<w; ++i){
			result[fn(w,h,i,j)] = data[w*j+i];
		}
	}
	return result;
}

const rotate90 = helpFn((w,h,i,j) => h*(w-1-i)+j);
const rotate180 = helpFn((w,h,i,j) => w*(h-1-j)+w-1-i);
const rotate270 = helpFn((w,h,i,j) => h*i+h-1-j);
const flipX = helpFn((w,h,i,j) => w*j+w-1-i);
const transpose = helpFn((w,h,i,j) => h*i+j);
const flipY = helpFn((w,h,i,j) => w*(h-1-j)+i);
const transpose2 = helpFn((w,h,i,j) => h*(w-1-i)+h-1-j);

function isSymmetricY(data, w, h){
	let offset = 0;
	for(let j=0; j<h; ++j){
		for(let i=w>>1; i>0; --i){
			if(data[offset+i-1] != data[offset+w-i]){
				return false;
			}
		}
		offset += w;
	}
	return true;
}

function isSymmetricX(data, w, h){
	for(let j=h>>1; j>0; --j){
		let a = w*(j-1);
		let b = w*(h-j);
		for(let i=0; i<w; ++i){
			if(data[a+i] != data[b+i]){
				return false;
			}
		}
	}
	return true;
}

function printArray(data, w){
	const result = [];
	for(let i=0, n=data.length; i<n; ++i){
		result.push(data[i], (i+1) % w ? ',' : '\n');
	}
	return result.join('');
}

/*
let test = [1,2,3,4,5,6,7,8,9];
let test2 = [1,2,3,4,5,6,7,8,9,10];
console.log(printArray(test2, 5))
console.log(printArray(rotate90(test2, 5, 2), 2))
console.log(printArray(rotate180(test2, 5, 2), 5))
console.log(printArray(rotate270(test2, 5, 2), 2))
console.log(printArray(flipX(test2, 5, 2), 5))
console.log(printArray(flipY(test2, 5, 2), 5))
console.log(printArray(transpose(test2, 5, 2), 2))
console.log(printArray(transpose2(test2, 5, 2), 2))
console.log(isSymmetricY([1,2,1,3,4,3,5,6,5], 3, 3))
console.log(isSymmetricX([1,2,3,4,5,6,1,2,3], 3, 3))
console.log(isSymmetricY(test, 5, 3))
console.log(printArray(rotate90(test, 3, 3), 3),'\n')
console.log(rotate180(test, 3, 3).join('').match(/\d{3}/g).join('\n'),'\n')
console.log(rotate270(test, 3, 3).join('').match(/\d{3}/g).join('\n'),'\n')
console.log(flipX(test, 3, 3).join('').match(/\d{3}/g).join('\n'),'\n')
console.log(transpose(test, 3, 3).join('').match(/\d{3}/g).join('\n'),'\n')
console.log(flipY(test, 3, 3).join('').match(/\d{3}/g).join('\n'),'\n')
console.log(transpose2(test, 3, 3).join('').match(/\d{3}/g).join('\n'),'\n')
//*/

exports.rotate90 = rotate90;
exports.rotate180 = rotate180;
exports.rotate270 = rotate270;
exports.flipX = flipX;
exports.transpose = transpose;
exports.flipY = flipY;
exports.transpose2 = transpose2;
exports.isSymmetricY = isSymmetricY;
exports.isSymmetricX = isSymmetricX;
