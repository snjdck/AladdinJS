'use strict';

function createShape(shape, fill=0){
	return shape.reduceRight((fn, length) => () => Array.from({length}, fn), () => fill)();
}

function createDict(shape, fill=0){
	return shape.reduceRight((fn, keys) => () => Object.fromEntries(keys.map(v => [v, fn()])), () => fill)();
}

function createMixed(shape, fill=0){
	return shape.reduceRight((fn, value) => () => {
		if(Array.isArray(value)){
			return Object.fromEntries(value.map(v => [v, fn()]));
		}
		return Array.from({length: value}, fn);
	}, () => fill)();
}

exports.createShape = createShape;
exports.createDict = createDict;
exports.createMixed = createMixed;
