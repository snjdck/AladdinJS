'use strict';

/*
module.exports = function(){
	const queue = [];
	return function(root, handler, self){
		queue.push(root);
		while(queue.length > 0){
			let item = queue.pop();
			if(handler.call(self, item))continue;
			let children = item._children;
			if(children.length == 0)continue;
			queue.unshift.apply(queue, children);
		}
	}
}();
*/

function walk(item, handler, selfFlag=true){
	const value = selfFlag && handler.call(this, item);
	if(value === true)return;
	const children = item._children;
	for(let i=0, n=children.length; i<n; ++i){
		walk.call(this, children[i], handler);
	}
	if(value)value.call(this, item);
}

module.exports = walk;
