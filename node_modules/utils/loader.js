"use strict";

function loadData(url, type="text", method="GET"){
	if(typeof http == "object"){
		const http = require("http");
		return new Promise(function(resolve, reject){
			http.request({
				host: url,
				method
			}, response => {
				if(response.statusCode != 200){
					reject(response.statusMessage);
					return;
				}
				let buffer = Buffer.alloc(0);
				response.on("data", chunk => buffer = Buffer.concat([buffer, chunk]));
				response.on("end", () => {
					if(type == "text"){
						resolve(buffer.toString());
					}else{
						resolve(buffer);
					}
				});
			}).end();
		});
	}
	return new Promise(function(resolve, reject){
		let xmlhttp = new XMLHttpRequest();
		xmlhttp.responseType = type;
		xmlhttp.onreadystatechange = function(){
			if(xmlhttp.readyState != 4){
				return;
			}
			if(xmlhttp.status == 200){
				resolve(xmlhttp.response);
			}else{
				reject(xmlhttp.statusText);
			}
		};
		xmlhttp.open(method, url, true);
		xmlhttp.send();
	});
}

module.exports = {
	loadData
};