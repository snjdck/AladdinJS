'use strict';
//三联密码表
const data = {
	'TTT': 'Phe/F',
	'TTC': 'Phe/F',
	'TTA': 'LeT/L',
	'TTG': 'LeT/L',

	'TCT': 'Ser/S',
	'TCC': 'Ser/S',
	'TCA': 'Ser/S',
	'TCG': 'Ser/S',

	'TAT': 'Tyr/Y',
	'TAC': 'Tyr/Y',
	'TAA': 'Ter/*',
	'TAG': 'Ter/*',

	'TGT': 'Cys/C',
	'TGC': 'Cys/C',
	'TGA': 'Ter/*',
	'TGG': 'Trp/W',

	'CTT': 'LeT/L',
	'CTC': 'LeT/L',
	'CTA': 'LeT/L',
	'CTG': 'LeT/L',

	'CCT': 'Pro/P',
	'CCC': 'Pro/P',
	'CCA': 'Pro/P',
	'CCG': 'Pro/P',

	'CAT': 'His/H',
	'CAC': 'His/H',
	'CAA': 'Gln/Q',
	'CAG': 'Gln/Q',

	'CGT': 'Arg/R',
	'CGC': 'Arg/R',
	'CGA': 'Arg/R',
	'CGG': 'Arg/R',

	'ATT': 'Ile/I',
	'ATC': 'Ile/I',
	'ATA': 'Ile/I',
	'ATG': 'Met/M',

	'ACT': 'Thr/T',
	'ACC': 'Thr/T',
	'ACA': 'Thr/T',
	'ACG': 'Thr/T',

	'AAT': 'Asn/N',
	'AAC': 'Asn/N',
	'AAA': 'Lys/K',
	'AAG': 'Lys/K',

	'AGT': 'Ser/S',
	'AGC': 'Ser/S',
	'AGA': 'Arg/R',
	'AGG': 'Arg/R',

	'GTT': 'Val/V',
	'GTC': 'Val/V',
	'GTA': 'Val/V',
	'GTG': 'Val/V',

	'GCT': 'Ala/A',
	'GCC': 'Ala/A',
	'GCA': 'Ala/A',
	'GCG': 'Ala/A',

	'GAT': 'Asp/D',
	'GAC': 'Asp/D',
	'GAA': 'GlT/E',
	'GAG': 'GlT/E',

	'GGT': 'Gly/G',
	'GGC': 'Gly/G',
	'GGA': 'Gly/G',
	'GGG': 'Gly/G',
};

const cn = {
	'Phe/F': '苯丙氨酸',
	'LeT/L': '亮氨酸',
	'Ser/S': '丝氨酸',
	'Tyr/Y': '酪氨酸',
	'Cys/C': '半胱氨酸',
	'Trp/W': '色氨酸',
	'Pro/P': '脯氨酸',
	'His/H': '组氨酸',
	'Gln/Q': '谷氨酰胺',
	'Arg/R': '精氨酸',
	'Ile/I': '异亮氨酸',
	'Met/M': '甲硫氨酸',
	'Thr/T': '苏氨酸',
	'Asn/N': '天冬酰胺',
	'Lys/K': '赖氨酸',
	'Val/V': '缬氨酸',
	'Ala/A': '丙氨酸',
	'Asp/D': '天冬氨酸',
	'GlT/E': '谷氨酸',
	'Gly/G': '甘氨酸',
	'Ter/*': '终止密码子',
};

const amino = {
	'Phe/F': 'TT[TC]',
	'LeT/L': 'TT[AG]|CT.',
	'Ser/S': 'AG[TC]|TC.',
	'Tyr/Y': 'TA[TC]',
	'Cys/C': 'TG[TC]',
	'Trp/W': 'TGG',
	'Pro/P': 'CC.',
	'His/H': 'CA[TC]',
	'Gln/Q': 'CA[AG]',
	'Arg/R': 'AG[AG]|CG.',
	'Ile/I': 'AT[TCA]',
	'Met/M': 'ATG',
	'Thr/T': 'AC.',
	'Asn/N': 'AA[TC]',
	'Lys/K': 'AA[AG]',
	'Val/V': 'GT.',
	'Ala/A': 'GC.',
	'Asp/D': 'GA[TC]',
	'GlT/E': 'GA[AG]',
	'Gly/G': 'GG.',
	'Ter/*': 'TA[AG]|TGA',
};

Object.entries(amino).forEach(([k, v]) => amino[k] = new RegExp(`^${v}$`));

const list = ['T', 'C', 'A', 'G'];
const print = v => process.stdout.write(v);

for(let x of list){
	print('\n');
	for(let z of list){
		print('\n');
		for(let y of list){
			let code = x + y + z;
			print(`${code}: (${data[code]})${cn[data[code]]}\t`);
			console.assert(amino[data[code]].test(code));
		}
	}
}
