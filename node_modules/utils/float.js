//1- 8-23
//1-11-52

const genEpsilon = (n, offset) => Array(n).fill(0).map((_, i) => 2 ** (i * -8 - offset));
const calc = (list, epsilon) => list.reduce((r, v, i) => r + v * epsilon[i], 1);

const readFloat32 = (epsilon => buffer => {
	let t = buffer[1] >> 7;
	let S = (buffer[0] >> 7) ? -1 : 1;
	let E = ((buffer[0] & 0x7F) << 1) - 127;
	let M = calc(buffer.slice(1, 4), epsilon);
	return S * (M - t) * 2 ** (E + t);
})(genEpsilon(3, 7));

const readFloat64 = (epsilon => buffer => {
	let t = buffer[1] >> 4;
	let S = (buffer[0] >> 7) ? -1 : 1;
	let E = ((buffer[0] & 0x7F) << 4) - 1023;
	let M = calc(buffer.slice(1, 8), epsilon);
	return S * (M - t) * 2 ** (E + t);
})(genEpsilon(7, 4));

console.log(readFloat32(Buffer.from([0x40, 0xF0, 0, 0])) == 7.5);
console.log(readFloat64(Buffer.from([0x40, 0x1E, 0, 0, 0, 0, 0, 0])) == 7.5);