'use strict';

function defineMethod(target, prop, value){
	return Object.defineProperty(target, prop, {
		writable: true,
		configurable: true,
		enumerable: false,
		value
	});
}

defineMethod(Function.prototype, 'before', function(fn){
	return this.wrap(fn);
});

defineMethod(Function.prototype, 'after', function(fn){
	return this.wrap(null, fn);
});

defineMethod(Function.prototype, 'wrap', function(prev, next){
	if(!(prev || next))return this;
	const self = this;
	return function(...args){
		if(prev)prev.apply(this, args);
		const result = self.apply(this, args);
		if(next)next.apply(this, args);
		return result;
	};
});
