
const callWhen = (f, t) => function(v){
	if(t(v))f.call(this, v);
}

const callWhenTrue = (t => f => callWhen(f, t))(v => v);

const onecall = (fn, oldArg) => function(newArg){
	if(oldArg != newArg){
		oldArg = newArg;
		fn.call(this, newArg);
	}
	return newArg;
}

const onecalln = (fn, oldArgs) => function(...newArgs){
	let updateFlag = false;
	for(let i=0, n=oldArgs.length; i<n; ++i){
		if(oldArgs[i] != newArgs[i]){
			oldArgs[i] = newArgs[i]
			updateFlag = true;
		}
	}
	if(updateFlag){
		fn.apply(this, newArgs);
	}
	return newArgs;
}

exports.callWhen = callWhen;
exports.callWhenTrue = callWhenTrue;
exports.onecall = onecall;
exports.onecalln = onecalln;
