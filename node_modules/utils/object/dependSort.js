function dependSort(list, dependFn, keyFn){
	const findingList = [];
	const result = [];
	const getItem = (keys => k => list[keys.indexOf(k)])(list.map(keyFn));
	const insertList = list => list.forEach(insertItem);
	const insertItem = item => {
		if(result.includes(item))return;
		const isFinding = findingList.includes(item);
		findingList.push(item);
		if(isFinding)throw new Error(`service is recursively used:[${findingList.map(keyFn).join(" -> ")}]`);
		insertList(Array.from(dependFn(item), getItem));
		findingList.pop();
		result.push(item);
	}
	insertList(list);
	return result;
}

module.exports = dependSort;
