
function decode(value, result={}){
	result.a = 0xFF & value >> 24;
	result.r = 0xFF & value >> 16;
	result.g = 0xFF & value >> 8;
	result.b = 0xFF & value;
	return result;
}

function encode({r, g, b, a=0}){
	return (a & 0xFF) << 24 | (r & 0xFF) << 16 | (g & 0xFF) << 8 | (b & 0xFF);
}

const add = function(){
	const v1 = {}, v2 = {};
	return (c1, c2) => {
		decode(c1, v1);
		decode(c2, v2);
		v1.r += v2.r;
		v1.g += v2.g;
		v1.b += v2.b;
		return encode(v1);
	}
}();

const diff = function(){
	const v1 = {}, v2 = {};
	return (c1, c2) => {
		decode(c1, v1);
		decode(c2, v2);
		v1.r -= v2.r;
		v1.g -= v2.g;
		v1.b -= v2.b;
		return Math.abs(v1.r) + Math.abs(v1.g) + Math.abs(v1.b);
	}
}();

const scale = function(){
	const v = {};
	return (c, s) => {
		decode(c, v);
		v.r *= s;
		v.g *= s;
		v.b *= s;
		return encode(v);
	}
}();

function rgb888_to_rgb565(c){
	const r = (0xFF & c >> 16) >> 3;
	const g = (0xFF & c >> 8) >> 2;
	const b = (0xFF & c) >> 3;
	return r << 11 | g << 5 | b;
}

function rgb565_to_rgb888(c){
	const r = (0x1F & c >> 11) << 3;
	const g = (0x3F & c >> 5) << 2;
	const b = (0x1F & c) << 3;
	return r << 16 | g << 8 | b;
}