'use strict';
/*
0xxxxxxx 7bit 兼容ASCII码
110xxxxx 10xxxxxx 11bit
1110xxxx 10xxxxxx 10xxxxxx 16bit 汉字所在
11110xxx 10xxxxxx 10xxxxxx 10xxxxxx 21bit
*/
const Converter = (list=[]) => data => {
	const output = [];
	const n = list.push(...data);
	let i = 0;
	for(; i<n; ++i){
		const v = list[i];
		if(v < 0x80){
			output.push(v);
		}else if(v < 0xC0){
			continue;
		}else if(v < 0xE0){
			if(i + 1 >= n)break;
			output.push((v & 0x1F) << 6 | list[++i] & 0x3F);
		}else if(v < 0xF0){
			if(i + 2 >= n)break;
			output.push((v & 0xF) << 12 | (list[++i] & 0x3F) << 6 | list[++i] & 0x3F);
		}else if(v < 0xF8){
			if(i + 3 >= n)break;
			output.push((v & 0x7) << 18 | (list[++i] & 0x3F) << 12 | (list[++i] & 0x3F) << 6 | list[++i] & 0x3F);
		}
	}
	list.splice(0, i);
	return String.fromCodePoint(...output);
}

module.exports = Converter;
