'use strict';

exports.castUnicode = function(){
	const pattern = /[^\x00-\xff]/g;
	const replaceFn = v => '\\u' + v.charCodeAt(0).toString(16).padStart(4, '0');
	return v => v.replace(pattern, replaceFn);
}();

exports.tab = function(){
	//const pattern = /\n|^/g;
	//return text => text.replace(pattern, '$&\t');
	const pattern = /.*\n|.+$/g;
	return text => text.replace(pattern, '\t$&');
}();

exports.untab = function(){
	const pattern = /^\t(.*)$/gm;
	return text => text.replace(pattern, '$1');
}();

exports.descSize = function(){
	const level = [[2**30, 'G'], [2**20, 'M'], [2**10, 'K']];
	return value => {
		for(let [t, u] of level){
			if(value < t)continue;
			return Math.floor(100 * value / t) * 0.01 + u;
		}
		return value + 'B';
	}
}();
