"use strict";

const trace = console.log;
const formatPrice = v => v * 0.0001 + "ä¸‡";
const formatDate = v => Math.floor(v/12+1).toString().padEnd(2) + "-" + (v%12+1).toString().padEnd(2);

class HousePrice
{
	constructor(price, area, info){
		info = Object.assign({
			yearRate: 0.049,
			numYear: 30,
			firstPayRate: 0.3
		}, info);

		this.monthRate = info.yearRate / 12;
		this.numMonth  = info.numYear  * 12;

		let totalPrice = price * area;
		this.loan = totalPrice * (1 - info.firstPayRate);
		trace("total:", formatPrice(totalPrice));
		trace("  pay:", formatPrice(totalPrice * info.firstPayRate));
		trace(" loan:", formatPrice(this.loan));
		let t0 = Array.from(this.test1());
		let t1 = Array.from(this.test2());
		
		for(let i=0; i<this.numMonth; ++i){
			trace(formatDate(i), "\t", Math.round(t0[i]), "\t", Math.round(t1[i]));
		}
	}
	
	*test1(){
		const {loan, numMonth, monthRate} = this;
		let monthBase = loan / numMonth;
		let leftMoney = loan;
		for(let i=0; i<numMonth; ++i){
			yield monthBase + leftMoney * monthRate;
			leftMoney -= monthBase;
		}
	}
	
	*test2(){
		const {loan, numMonth, monthRate} = this;
		let monthBase = loan * monthRate / (Math.pow(1 + monthRate, numMonth) - 1);
		let leftMoney = loan;
		for(var i=0; i<numMonth; ++i){
			yield monthBase + leftMoney * monthRate;
			leftMoney -= monthBase;
			monthBase *= 1 + monthRate;
		}
	}
}

new HousePrice(9000, 131, {
	yearRate: 0.0539,
	numYear: 25,
	firstPayRate: 0.5
});