"use strict";

function range(value){
	let result = [];
	for(let i=0; i<value; ++i){
		result[i] = i;
	}
	return result;
}

function* combination(list, offset=0){
	if(offset >= list.length){
		yield [];
		return;
	}
	for(let tail of combination(list, offset+1)){
		for(let head of list[offset]){
			yield [head, ...tail];
		}
	}
}

function* select(list, count=1){
	if(list.length < count)return;
	if(list.length === count){
		yield list;
		return;
	}
	if(count <= 0){
		yield [];
		return;
	}
	if(count === 1){
		for(let v of list)
			yield [v];
		return;
	}
	for(let i=0, n=list.length-count; i<=n; ++i){
		let head = list[i];
		for(let tail of select(list.slice(i + 1), count - 1)){
			yield [head, ...tail];
		}
	}
}

module.exports = {
	range,
	combination,
	select
};
