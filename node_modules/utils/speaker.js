'use strict';

/*
10 = .
11 = 十
12 = 百
13 = 千
*/
function split(value, integerCount=3, decimalCount=1){
	if(value < 0 || value >= 10 ** integerCount)return;
	const result = [];
	for(let i=1, n=integerCount+decimalCount; i<=n; ++i){
		result.push(Math.floor(value * 10 ** (i - integerCount)));
	}
	for(let i=result.length-1; i>0; --i){
		result[i] -= result[i-1] * 10;
	}
	return [result.splice(0, integerCount), result];
}

function cast(integerPart, decimalPart){
	while(integerPart.length > 0){
		if(integerPart[0])break;
		integerPart.shift();
	}
	for(let i=decimalPart.length-1; i>=0; --i){
		if(decimalPart[i])break;
		decimalPart.pop();
	}
	const result = [];
	for(let i=0, n=integerPart.length, hasGap=false; i<n; ++i){
		if(integerPart[i] == 0){
			hasGap = true;
			continue;
		}
		if(hasGap){
			result.push(0);
			hasGap = false;
		}
		result.push(integerPart[i]);
		if(i < n - 1){
			result.push(n - i + 9);
		}
	}
	if(result.length <= 0){
		result.push(0);
	}
	if(decimalPart.length > 0){
		result.push(10, ...decimalPart);
	}
	return result;
}

function test(value, correct){
	const result = cast(...split(value, 3, 6));
	if(result.toString() == correct)return;
	console.error(value, result, correct);
}

test(903.405, '9,12,0,3,10,4,0,5');
test(900.405, '9,12,10,4,0,5');
test(50.405, '5,11,10,4,0,5');
test(5.405, '5,10,4,0,5');
test(0.405, '0,10,4,0,5');
test(0.4, '0,10,4');
test(0, '0');