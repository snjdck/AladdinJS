"use strict";

const escapeColor = (pattern => {
	return input => {
		while(input.search(pattern) >= 0)
			input = input.replace(pattern, "<font color='$1'>$2</font>");
		return input;
	};
})(/\[(#[0-9a-fA-F]{1,6})\s(.+?)\]/);

const escapeHtmlChar = (pattern => {
	const htmlDict = {"<":"&lt;",">":"&gt;","&":"&amp;"};
	const escapeFn = char => htmlDict[char];
	return input => input.replace(pattern, escapeFn);
})(/[<>&]/g);

function formatInt(value, length=2, radix=10){
	return value.toString(radix).toUpperCase().padStart(length, "0");
}

const isNodeJS = typeof Buffer === 'function';
const str2bin = isNodeJS ? v => Buffer.from(v).toString('hex')   : ((encoder, num2str) => v => Array.from(encoder.encode(v)).map(num2str).join(''))(new TextEncoder(), v => v.toString(16).padStart(2, '0'));
const bin2str = isNodeJS ? v => Buffer.from(v, 'hex').toString() : ((decoder, str2num) => v => decoder.decode(new Uint8Array(v.match(/\w{2}/g).map(str2num))))(new TextDecoder(), v => parseInt(v, 16));

module.exports = {
	escapeColor,
	escapeHtmlChar,
	formatInt,
	str2bin,
	bin2str,
};