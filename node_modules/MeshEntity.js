"use strict";

const DisplayObject3D = require("./DisplayObject3D");

const Matrix3D = require("Matrix3D");
const {MeshVertexArray} = require("./vertexarrays");
var worldMatrix = new Matrix3D();

class MeshEntity extends DisplayObject3D
{
	constructor(){
		super();
	}

	set mesh(value){
		console.log(value);
		this._mesh = value;
		var subMesh = this._mesh.subMeshList[0];
		this.vao = new MeshVertexArray(subMesh);
	}

	collectDrawUnits(collector, gl, mode){
		if(!this._mesh){
			return;
		}
		if(mode == "pick"){
			if(!(this.mouseEnabled && this.hitTestMaterial)){
				return;
			}
			let uid = gl.mouseMgr.pickRegister(this);
			collector.addDrawUnit({vao:this.vao, material:this.hitTestMaterial, worldMatrix, uid});
			return;
		}
		for(let material of this.materials){
			collector.addDrawUnit({vao:this.vao, material, worldMatrix});
		}
	}
}

module.exports = MeshEntity;