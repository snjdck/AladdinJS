"use strict";

const DisplayObject3D = require("./DisplayObject3D");

const Matrix3D = require("Matrix3D");
const {MeshVertexArray} = require("./vertexarrays");
var worldMatrix = new Matrix3D();

class MeshEntity extends DisplayObject3D
{
	constructor(){
		super();
	}

	set mesh(value){
		console.log(value);
		this._mesh = value;
		var subMesh = this._mesh.subMeshList[0];
		this.vao = new MeshVertexArray(subMesh);
	}

	collectDrawUnits(collector, gl, mode){
		if(!this._mesh){
			return;
		}
		if(mode == "pick"){
			if(!this.mouseEnabled){
				return;
			}
			var uid = gl.mouseMgr.pickRegister(this);
		}
		let {vao, texture} = this;
		let shader = `shader3d&${mode}`;
		collector.addDrawUnit({shader, worldMatrix, vao, texture, uid}, mode);
	}
}

module.exports = MeshEntity;