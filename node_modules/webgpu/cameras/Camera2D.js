
'use strict';

const Material2D = require('../materials/Material2D');
const Matrix2D = require('../math/Matrix2D');
const {walkTree} = require('utils/traverseTree');
const DrawUnitCollector2D = require('./DrawUnitCollector2D');
const drawBitmap3D = require('../2d/Bitmap3DDrawer');
const drawFilter2D = require('../2d/Filter2DDrawer');

class Camera2D
{
	constructor(lens){
		this.worldTransformInvert = new Matrix2D();
		this.lens = [0, 0, -1, 1];
		//this.layerFlagFilter = 0xFFFFFFFF;
		//this.viewportRect = new Float32Array([0, 0, 1, 1]);
		//this.projectionMatrix = new Array(16);
		this.drawUnitCollector = new DrawUnitCollector2D();

		if(lens)this.setLens(lens);
	}

	setLens(value){
		const {width, height} = value;
		const {lens} = this;
		lens[0] = 2 / width;
		lens[1] = -2 / height;
	}
}

Camera2D.prototype.collectDrawUnits = function(){
	const fn = walkTree(function(item, root, forceDrawFlag, drawUnitCollector){
		if(!item.visible)return true;
		if(item.filter && !(item == root && forceDrawFlag)){
			const {texture} = item.filter;
			const drawUnit = Object.create(item);
			drawUnit.texture = texture;
			drawUnit.width = texture.width;
			drawUnit.height = texture.height;
			drawUnitCollector.addBitmap(drawUnit);
			drawFilter2D(item, new Camera2D());
			return true;
		}else if(item.texture){
			drawUnitCollector.addBitmap(item);
			if(item.type == 'bitmap3d'){
				drawUnitCollector.addBitmap3D(item);
			}
		}
	});
	return function(root, forceDrawFlag=false){
		fn(root, true, root, forceDrawFlag, this.drawUnitCollector);
	}
}();

Camera2D.prototype.draw = function(){
	const tempBuffer = new Float32Array(12);
	return function(){
		const {bitmapList, bitmap3DList} = this.drawUnitCollector;
		if(bitmap3DList.length > 0){
			drawBitmap3D(bitmap3DList);
		}
		if(bitmapList.length <= 0)return;
		tempBuffer.set(this.lens);
		this.worldTransformInvert.copyToArray(tempBuffer, 4);
		Material2D.setBindGroup(0, [{binding: 0, resource:{buffer:tempBuffer}}]);
		Material2D.draw(bitmapList);
		this.drawUnitCollector.clear();
	};
}();

module.exports = Camera2D;
