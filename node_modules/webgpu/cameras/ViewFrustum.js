'use strict';

class ViewFrustum
{
	constructor(){
		this.planeList = [new Array(4), new Array(4), new Array(4), new Array(4), new Array(4), new Array(4)];
	}

	update(camera, l=-1, b=-1, r=1, t=1){
		const {projectionMatrix} = camera;
		const {planeList} = this;
		for(let i=0; i<4; ++i){
			const x = projectionMatrix[i];
			const y = projectionMatrix[i+4];
			const z = projectionMatrix[i+8];
			const w = projectionMatrix[i+12];
			planeList[0][i] = x - w * l;
			planeList[1][i] = r * w - x;
			planeList[2][i] = y - w * b;
			planeList[3][i] = t * w - y;
			planeList[4][i] = z;
			planeList[5][i] = w - z;
		}
	}

	canCull(aabb){
		const {minX, minY, minZ, maxX, maxY, maxZ} = aabb;
		for(const [a, b, c, d] of this.planeList){
			if(
				a * (a > 0 ? maxX : minX) + 
				b * (b > 0 ? maxY : minY) + 
				c * (c > 0 ? maxZ : minZ) + 
				d < 0
			)return true;
		}
		return false;
	}
}

module.exports = ViewFrustum;