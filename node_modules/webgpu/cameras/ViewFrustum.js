'use strict';

const mat4 = require('opengl/math/mat4');
const Mat3x4 = require('../Mat3x4');

class ViewFrustum
{
	constructor(){
		this.matrix = new Mat3x4();
		this.planeList = [new Array(4),new Array(4),new Array(4),new Array(4)];
	}

	update(camera){
		const {matrix, planeList} = this;
		camera.worldTransformInvert.append(new Mat3x4(camera.lens.slice(0, 12)), matrix);
		calc_planes(matrix.rawData, planeList);
	}

	canCull(aabb){
		return mat4.cull_aabb(this.planeList, aabb);
	}
}

function calc_planes(matrix, planeList){
	for(let i=0; i<4; ++i){
		const a = i < 3 ? 0 : 1;
		for(let j=0; j<2; ++j){
			const b = matrix[i+j*4];
			const index = j << 1;
			planeList[index  ][i] = a + b;
			planeList[index+1][i] = a - b;
		}
	}
}

module.exports = ViewFrustum;