'use strict';

const DisplayObject3D = require('../DisplayObject3D');
const ViewFrustum = require('./ViewFrustum');

class Camera3D extends DisplayObject3D
{
	constructor(lens){
		super();
		this.cullEnabled = false;
		this.viewFrustum = new ViewFrustum();
		this.lens = lens;
		this.layerFlagFilter = 0xFFFFFFFF;
		this.viewportRect = new Float32Array([0, 0, 1, 1]);
	}

	updateViewFrustum(){
		if(!this.cullEnabled)return;
		this.viewFrustum.update(this);
	}

	setViewport(frameRect, drawRect){
		const {viewportRect} = this;

		viewportRect[0] = (drawRect.width + 2 * drawRect.x) / frameRect.width - 1;
		viewportRect[1] = 1 - (drawRect.height + 2 * drawRect.y) / frameRect.height;
		viewportRect[2] = drawRect.width / frameRect.width;
		viewportRect[3] = drawRect.height / frameRect.height;
	}

	canCull(element){
		if(!this.cullEnabled)return false;
		if(element.layerFlag && !(element.layerFlag & this.layerFlagFilter))return true;
		if(!element.bound)return false;
		return this.viewFrustum.canCull(element.bound);
	}
}

module.exports = Camera3D;
