'use strict';

const Vulkan = require('../Vulkan');
const Matrix2D = require('opengl/math/Matrix2D');

class Filter2D
{
	static Init(){
		const {device, filterSwapChain} = Vulkan;
		const frameBuffer = filterSwapChain.frameBufferA.createView();
		const textureBindGroupLayout = device.createBindGroupLayout({
			entries:[{
				binding: 0,
				visibility: GPUShaderStage.FRAGMENT,
				type: 'sampler'
			},{
				binding: 1,
				visibility: GPUShaderStage.FRAGMENT,
				type: 'sampled-texture'
			}]
		});
		this.prototype.textureBindGroupLayout = textureBindGroupLayout;
		this.textureBindGroup = device.createBindGroup({
			layout: textureBindGroupLayout,
			entries: [{
				binding: 0,
				resource: device.createSampler({
					magFilter: 'linear',
					minFilter: 'linear',
				})
			},{	binding: 1,
				resource: frameBuffer
			}]
		});
	}

	constructor(){
		this.worldTransform = new Matrix2D();
	}

	onDraw(){}
}

module.exports = Filter2D;
