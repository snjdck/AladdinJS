'use strict';

const BitmapQueue = require('opengl/renderers/BitmapQueue');

class Render2D
{
	constructor(){
		this.handlerDict = {};
		this.bitmapQueue = new BitmapQueue(v => v.texture.getRawAsset());
	}

	calcKey(type, mode){
		return type + '@' + mode;
	}

	register(type, handler, mode=''){
		this.handlerDict[this.calcKey(type, mode)] = handler;
	}

	tryAdd(target, mode=''){
		const type = target.type;
		const handler = this.handlerDict[this.calcKey(type, mode)];
		if(!handler)return;
		handler.call(target, mode, type);
	}

	add(target){
		this.bitmapQueue.add(target);
	}

	draw(fn, self){
		this.bitmapQueue.draw(fn, self).clear();
	}
}

module.exports = Render2D;
