'use strict';

const Vulkan = require('../../Vulkan');

module.exports = function(){
	const {device, canvas} = Vulkan;

	//const indexBuffer = createBufferMapped(GPUBufferUsage.INDEX, new Uint16Array(createMeshIndices(4, 4)));
	const uniformBuffer = Vulkan.createBufferMapped(GPUBufferUsage.UNIFORM, new Float32Array([2 / canvas.width, -2 / canvas.height]));

	const bindGroup = device.createBindGroup({
		layout: Vulkan.bindGroupLayoutDict.bindGroupLayout,
		entries: [{
			binding: 0,
			resource: {buffer: uniformBuffer}
		},{	binding: 1,
			resource: device.createSampler({
				magFilter: 'linear',
				minFilter: 'linear',
			})
		}]
	});

	return function(){
		const {renderPassEncoder, pipelineDict} = Vulkan;
		renderPassEncoder.setPipeline(pipelineDict.pipeline2D);
		renderPassEncoder.setBindGroup(0, bindGroup);
	}
}