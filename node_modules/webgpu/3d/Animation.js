"use strict";

class Animation
{
	constructor(name, duration, trackDict){
		this.name = name;
		this.duration = duration;
		this.trackDict = trackDict;
	}

	calcTransform(boneID, time, result){
		const keyFrameList = this.trackDict[boneID];
		if(keyFrameList.length === 1){
			result.copyFrom(keyFrameList[0]);
			return;
		}
		for(let i=keyFrameList.length-1; i>=0; --i){
			const keyFrame = keyFrameList[i];
			if(time > keyFrame.time){
				let nextKeyFrame = keyFrameList[i+1];
				if(nextKeyFrame){
					let factor = (time - keyFrame.time) / (nextKeyFrame.time - keyFrame.time);
					keyFrame.interpolate(nextKeyFrame, factor, result);
				}else{
					let factor = time - keyFrame.time;
					keyFrame.interpolate(keyFrameList[0], factor, result);
					//result.copyFrom(keyFrame);
				}
				return;
			}
			if(time == keyFrame.time){
				result.copyFrom(keyFrame);
				return;
			}
		}
	}
}

module.exports = Animation;