'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');
const Texture2D = require('../2d/Texture2D');

const pipelineDesc = {
	layout: ['filter2D', '4'],
	vertex:{
		entryPoint: 'main',
		module: 'vertex_filter',
		buffers: [{
			arrayStride: 4 << 2,
			stepMode: 'instance',
			attributes: [
				{shaderLocation: 0, offset: 0, format: 'float32x4'}
			]
		}]
	},
	fragment:{
		entryPoint: 'main',
		module: 'fragment_filter',
		targets:[{
			format: 'bgra8unorm',
			blend: {
				color:{srcFactor: 'src-alpha', dstFactor: 'one-minus-src-alpha', operation: 'add'},
				alpha:{srcFactor: 'src-alpha', dstFactor: 'one-minus-src-alpha', operation: 'add'}
			}
		}]
	},
	primitive: {
		topology: 'triangle-strip',
		stripIndexFormat: 'uint16',
	}
};

class BlurFilter extends Material.Subclass(
	pipelineDesc,
	{filter:0,color:1}
){
	static useMeshFlag = 4;
	constructor(color){
		super();
		this.color = color;
		this.texture = new Texture2D();
	}
	static New(color){
		return new this(color);
	}
}

module.exports = BlurFilter;
