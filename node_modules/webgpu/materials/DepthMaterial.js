'use strict';

const TextureMaterial = require('./TextureMaterial');
const Material = require('./Material');

const maxCountPerDraw = 4;

const pipeline = {
	groups: TextureMaterial.pipelineDesc.groups.slice(0, 2),
	vertex: {
		buffers: [
			TextureMaterial.pipelineDesc.vertex.buffers[0],
			TextureMaterial.pipelineDesc.vertex.buffers[3],
		],
		entryPoint: 'mainDepth',
		code: TextureMaterial.pipelineDesc.vertex.code
	},
	depthStencil: {
		format: 'depth32float',//depth32float
		depthWriteEnabled: true,
		depthCompare: 'less-equal',
	}
};

class DepthMaterial extends TextureMaterial.Subclass(pipeline){
	static maxCountPerDraw = maxCountPerDraw;
	static onDraw(drawUnitList, mesh, renderPassEncoder){
		this.setBindGroup(renderPassEncoder, 1, [
			{binding:0, resource:{buffer:drawUnitList}},
			{binding:1, resource:{buffer:drawUnitList}},
		]);
		for(let i=0; i<mesh.subMeshList.length; ++i){
			const subMesh = mesh.subMeshList[i];
			subMesh.setBuffers(renderPassEncoder, this.vertexBuffers);
			subMesh.draw(renderPassEncoder, drawUnitList.length);
		}
	}
}

module.exports = DepthMaterial;
