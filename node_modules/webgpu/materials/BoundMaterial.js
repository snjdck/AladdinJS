'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');
const {delayNew} = require('utils/cache');
const transformSlot = require('./slots/transformSlot');
const boundSlot = require('./slots/boundSlot');

class BoundMaterial extends Material
{
	static useMeshFlag = false;
	static get pipeline(){
		return Vulkan.pipelineDict.pipelineBound;
	}
	static bindGroupSlots = delayNew(() => [/*transformSlot(), */boundSlot(1)]);
	static doDraw(instanceCount){
		const {renderPassEncoder} = Vulkan;
		renderPassEncoder.draw(24, instanceCount);
	}
	constructor(bound){
		super();
		this.bound = bound;
	}
}

module.exports = BoundMaterial;
