'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');

const transformSlot = require('./slots/transformSlot');

class BillboardMaterial extends Material.Subclass(
	() => Vulkan.pipelineDict.pipeline3DBillboard,
	() => [transformSlot(1)]
){
	static useMeshFlag = false;
	static onDraw(entityList, bindGroupInfoList){
		const {renderPassEncoder, device} = Vulkan;
		renderPassEncoder.setBindGroup(2, device.createBindGroup({
			layout: Vulkan.bindGroupLayoutDict.bindGroupLayout3,
			entries: [{
				binding: 0,
				resource: entityList[0].material.texture.createView()
			}]
		}));
		super.onDraw(entityList, bindGroupInfoList);
	}
	static doDraw(instanceCount){
		const {renderPassEncoder} = Vulkan;
		renderPassEncoder.draw(4, instanceCount);
	}
	constructor(texture, width, height){
		super();
		this.texture = texture;
	}
}

module.exports = BillboardMaterial;
