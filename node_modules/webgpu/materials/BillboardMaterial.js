'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');
const {classifyTexture} = require('./helper');

const pipelineDesc = {
	layout: ['0', '2_dynamic', '3'],
	vertex: {
		module: 'vertex_billboard',
	},
	fragment: {
		module: 'fragment_billboard',
		targets:[{
			format: 'bgra8unorm',
			blend: [['one', 'one-minus-src'], 'transparent']
		}]
	},
	depthStencil: {
		format: 'depth24plus-stencil8',
		depthWriteEnabled: false,
		depthCompare: 'less-equal',
	},
	primitive: {
		topology: 'triangle-strip',
		stripIndexFormat: 'uint16',
	}
};

class BillboardMaterial extends Material.Subclass(
	pipelineDesc,
	{transform:1}
){
	static useMeshFlag = 4;
	static *calcDrawIterator(entityList){
		for(const [texture, subEntityList] of classifyTexture(entityList)){
			Vulkan.renderPassEncoder.setBindGroup(2, Vulkan.createBindGroup('3', texture.createView()));
			yield * super.calcDrawIterator(subEntityList);
		}
	}
	constructor(texture, width, height){
		super();
		this.texture = texture;
	}
}

module.exports = BillboardMaterial;
