'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');

const transformSlot = require('./slots/transformSlot');

const pipelineDesc = {
	layout: ['0', '2_dynamic', '3'],
	vertex: {
		module: 'vertex_billboard',
	},
	fragment: {
		module: 'fragment_billboard',
		targets:[{
			format: 'bgra8unorm',
			blend: [['one', 'one-minus-src-color'], 'transparent']
		}]
	},
	depthStencil: {
		format: 'depth24plus-stencil8',
		depthWriteEnabled: false,
		depthCompare: 'less-equal',
	},
	primitive: {
		topology: 'triangle-strip',
		stripIndexFormat: 'uint16',
	}
};

class BillboardMaterial extends Material.Subclass(
	pipelineDesc,
	[transformSlot(1)]
){
	static useMeshFlag = false;
	static onDraw(entityList, bindGroupInfoList){
		const {renderPassEncoder} = Vulkan;
		renderPassEncoder.setBindGroup(2, Vulkan.createBindGroup('3', entityList[0].material.texture.createView()));
		super.onDraw(entityList, bindGroupInfoList);
	}
	static doDraw(instanceCount){
		const {renderPassEncoder} = Vulkan;
		renderPassEncoder.draw(4, instanceCount);
	}
	constructor(texture, width, height){
		super();
		this.texture = texture;
	}
}

module.exports = BillboardMaterial;
