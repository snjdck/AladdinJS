'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');

const {delayNew} = require('utils/cache');
const transformSlot = require('./slots/transformSlot');
const boneSlot = require('./slots/boneSlot');
const colorSlot = require('./slots/colorSlot');

class ColorMaterial extends Material
{
	static get pipeline(){
		return Vulkan.pipelineDict.pipelineColor;
	}
	static bindGroupSlots = delayNew(() => [transformSlot(1), boneSlot(2), colorSlot(3)]);
	static doDraw(instanceCount){
		const {renderPassEncoder, currentMesh} = Vulkan;
		renderPassEncoder.draw(currentMesh.vertexCount, instanceCount);
	}
	
	constructor(color){
		super();
		this.color = color;
	}
}

module.exports = ColorMaterial;
