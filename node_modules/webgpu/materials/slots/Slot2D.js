'use strict';

const Vulkan = require('../../Vulkan');
const VertexBufferSlotCache = require('../../helper/VertexBufferSlotCache');

const floatCountPerInstance = 24;

const valueFn = function(){
	const vertexData = new Float32Array(floatCountPerInstance);
	const allZero = new Float32Array(4);
	const allOne = new Float32Array(4).fill(1);
	return function(instance){
		const {worldTransform, texture, width, height, fgColor, viewportIndex} = instance;
		worldTransform.copyToArray(vertexData);
		vertexData[3] = viewportIndex;
		if(texture){
			vertexData.set(texture.xyuvMul, 8);
			vertexData.set(texture.xyuvAdd, 12);
			vertexData.set(texture.scale9grid, 20);
			vertexData[16] = width;
			vertexData[17] = texture.width;
			vertexData[18] = height;
			vertexData[19] = texture.height;
		}else{
			vertexData.set(allOne, 8);
			vertexData.set(allZero, 12);
			vertexData.set(allZero, 20);
			vertexData[16] = width;
			vertexData[17] = width;
			vertexData[18] = height;
			vertexData[19] = height;
		}
		return vertexData;
	};
}();

module.exports = new VertexBufferSlotCache(
	100, floatCountPerInstance << 2, valueFn
);
