'use strict';

const TextureMaterial = require('./TextureMaterial');

const pipeline = {
	...TextureMaterial.pipelineDesc,
	groups: TextureMaterial.pipelineDesc.groups.slice(0, 2),
	fragment: {
		...TextureMaterial.pipelineDesc.fragment,
		entryPoint:'mainColor'
	},
	primitive: {
		topology: 'line-list',
	}
};

class WireframeMaterial extends TextureMaterial.Subclass(pipeline){
	static onDraw(drawUnitList, mesh, renderPassEncoder){
		this.setBindGroup(renderPassEncoder, 1, [
			{binding:0, resource:{buffer:drawUnitList}},
			{binding:1, resource:{buffer:drawUnitList}},
		]);
		for(let i=0; i<mesh.subMeshList.length; ++i){
			const subMesh = mesh.subMeshList[i];
			subMesh.setBuffers(renderPassEncoder, this.vertexBuffers);
			subMesh.draw(renderPassEncoder, drawUnitList.length, 0, 'indexWireframe');
		}
	}
}

module.exports = WireframeMaterial;
