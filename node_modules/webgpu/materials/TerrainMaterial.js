'use strict';

const Vulkan = require('../Vulkan');
const Material = require('./Material');
const {classifyTexture} = require('./helper');

const pipelineDesc = {
	layout: ['0', '5'],
	vertex: {
		module: 'vertex_terrain',
		buffers: [{
			arrayStride: 12,
			attributes: ['uint8x2', [4, 'unorm8x2'], [8, 'unorm8x4']]
		}]
	},
	fragment: {
		module: 'fragment_terrain',
		targets:[{
			format: 'bgra8unorm',
			blend: ['transparent']
		}]
	},
	depthStencil: {
		format: 'depth24plus-stencil8',
		depthWriteEnabled: true,
		depthCompare: 'less-equal',
	}
};

class TerrainMaterial extends Material.Subclass(
	pipelineDesc,
){
	static *calcDrawIterator(entityList){
		for(const [texture, subEntityList] of classifyTexture(entityList)){
			Vulkan.renderPassEncoder.setBindGroup(1, Vulkan.createBindGroup('5', texture));
			yield * super.calcDrawIterator(subEntityList);
		}
	}
	static onDraw(instanceCount, mesh){
		Vulkan.renderPassEncoder.drawIndexed(mesh.indexCount, instanceCount);
	}
	constructor(texture){
		super();
		this.texture = texture;
	}
}

module.exports = TerrainMaterial;
