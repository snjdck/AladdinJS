'use strict';

const DisplayObject = require('./DisplayObject');
const DisplayObject2D = require('./DisplayObject2D');
const DisplayObject3D = require('./DisplayObject3D');
const Camera3D = require('./cameras/Camera3D');
const {Texture2D} = require('opengl/textures');

exports.Label = function(text=''){
	const label = new DisplayObject2D();
	label.type = 'label2d';
	label.fontSize = 12;
	label.text = text;
	return label;
}

exports.Bitmap = function(){
	const texturePropDesc = {get(){
		return this._texture;
	},set(value){
		this._texture = value;
		if(value == null){
			return;
		}
		this.width = value.width;
		this.height = value.height;
	}};
	return function(){
		const bitmap = new DisplayObject2D();
		bitmap.type = 'bitmap';
		bitmap._texture = null;
		bitmap.width = 0;
		bitmap.height = 0;
		Object.defineProperty(bitmap, 'texture', texturePropDesc);
		return bitmap;
	}
}()

class Bitmap3D extends DisplayObject2D
{
	constructor(width, height, lens){
		super();
		this.type = 'bitmap3d';
		this.root3d = new DisplayObject3D();
		this.width = width;
		this.height = height;
		this.camera = new Camera3D(lens);
		this.texture = new Texture2D();
	}
}

exports.Bitmap3D = Bitmap3D;
