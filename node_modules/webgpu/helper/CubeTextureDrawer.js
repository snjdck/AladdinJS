"use strict";

const Quaternion = require('../math/Quaternion');
const Mat3x4 = require('../Mat3x4');

const rotationList = [
	new Quaternion().fromEulerAngles(0, -0.5 * Math.PI, 0),//+x
	new Quaternion().fromEulerAngles(0,  0.5 * Math.PI, 0),//-x
	new Quaternion().fromEulerAngles( 0.5 * Math.PI, 0, 0),//+y
	new Quaternion().fromEulerAngles(-0.5 * Math.PI, 0, 0),//-y
	new Quaternion(),//+z
	new Quaternion().fromEulerAngles(0, Math.PI, 0),//-z
];

function setLens(lens, zNear, zFar){
	lens[ 0] = 1;
	lens[ 5] = 1;
	lens[10] = zFar / (zFar - zNear);
	lens[11] = zFar * zNear / (zNear - zFar);
	lens[14] = 1;
}

const mvp = new Float32Array(32);
const matrix = new Mat3x4(mvp.subarray(16, 28));

function* drawDepthMap(commandEncoder, {x, y, z}, zNear, zFar, depthStencilView){
	setLens(mvp, zNear, zFar);
		for(let i=0; i<6; ++i){
			if(i == 4)continue;
			matrix.identity().moveTo(-x, -y, -z).appendRotation(rotationList[i]);
			//mvp.set(matrix.rawData, 16);
			for(let renderPassEncoder of commandEncoder.beginRenderPass(';1+store', depthStencilView[i])){
				yield [renderPassEncoder, mvp];
			}
		}
}

exports.drawDepthMap = drawDepthMap;