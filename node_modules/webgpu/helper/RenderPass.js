const Vulkan = require('../Vulkan');

const RenderPass = desc => function*(commandEncoder, ...textureViews){
	const n = desc.colorAttachments.length;
	for(let i=0; i<n; ++i){
		desc.colorAttachments[i].view = textureViews[i];
	}
	if(desc.depthStencilAttachment){
		desc.depthStencilAttachment.view = textureViews[n];
	}
	//Vulkan.renderPassUseDepthStencilFlag = desc.depthStencilAttachment != null;
	const prevRenderPassEncoder = Vulkan.renderPassEncoder;
	Vulkan.renderPassEncoder = commandEncoder.beginRenderPass(desc);
	yield Vulkan.renderPassEncoder;
	Vulkan.renderPassEncoder.end();
	Vulkan.renderPassEncoder = prevRenderPassEncoder;
}
/*
const RenderPass = desc => function(commandEncoder, handler, ...textureViews){
	const n = desc.colorAttachments.length;
	for(let i=0; i<n; ++i){
		desc.colorAttachments[i].view = textureViews[i];
	}
	if(desc.depthStencilAttachment){
		desc.depthStencilAttachment.view = textureViews[n];
	}
	//Vulkan.renderPassUseDepthStencilFlag = desc.depthStencilAttachment != null;
	const prevRenderPassEncoder = Vulkan.renderPassEncoder;
	Vulkan.renderPassEncoder = commandEncoder.beginRenderPass(desc);
	handler.call(this, Vulkan.renderPassEncoder);
	Vulkan.renderPassEncoder.end();
	Vulkan.renderPassEncoder = prevRenderPassEncoder;
}
*/
module.exports = RenderPass;
