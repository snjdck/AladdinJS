'use strict';

function* groupDraw(activeFn, count){
	for(let i=0, begin=0; begin<count; ++i){
		if(i < count && activeFn.call(this, i)){
			continue;
		}
		if(begin < i){
			yield [begin, i - begin];
		}
		begin = i + 1;
	}
}

module.exports = groupDraw;
/*
function groupDrawCallback(list, offset, count, activeFn, callback){
	let fn = groupDraw.bind(null, i => activeFn(list[offset+i]));
	for(const v of fn(count)){
		callback(...v);
	}
}
groupDrawCallback([1,1,0,0,0], 0, 5, v => v, console.log)
groupDrawCallback([1,1,1,1,1], 0, 5, v => v, console.log)
groupDrawCallback([0,0,1,1,1], 0, 5, v => v, console.log)
groupDrawCallback([0,0,1,1,0], 0, 5, v => v, console.log)
groupDrawCallback([0,1,0,1,0], 0, 5, v => v, console.log)
groupDrawCallback([0,0,0,0,0], 0, 5, v => v, console.log)
groupDrawCallback([1,0,0,0,1], 0, 5, v => v, console.log)
//*/
