'use strict';

const Pipeline = require('../materials/Pipeline');

const drawMipmap = function(){
	const drawFn = Pipeline.Blit([[
		{name:'g_sampler', sampler:{}, default:{minFilter:'linear'}},
		{name:'baseTexture', texture:{}},
	]], {format: 'bgra8unorm'}, `@fragment{return textureSample(baseTexture, g_sampler, uv);}`);
	return (commandEncoder, texture) => {
			for(let i=1, n=texture.mipLevelCount; i<n; ++i){
				for(let renderPassEncoder of commandEncoder.beginRenderPass('[0,0,0,0]+store', texture.createView({baseMipLevel:i,mipLevelCount:1}))){
					renderPassEncoder.setPipeline(drawFn);
					renderPassEncoder.setResources({baseTexture: texture.createView({baseMipLevel:i-1,mipLevelCount:1})});
					renderPassEncoder.drawQuad();
				}
			}
	}
}();

exports.drawMipmap = drawMipmap;
