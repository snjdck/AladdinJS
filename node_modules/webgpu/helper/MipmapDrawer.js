'use strict';

const {CommandEncoder, beginRenderPass} = require('./CommandEncoder');
const {blit} = require('./RectDrawer');

const drawMipmap = function(){
	const drawFn = blit([[
		{name:'g_sampler', sampler:{}, default:{minFilter:'linear'}},
		{name:'baseTexture', texture:{}},
	]], {format: 'bgra8unorm'}, `#include<fragmentUV>`);
	return (device, texture) => {
		for(let commandEncoder of CommandEncoder(device)){
			for(let i=1, n=texture.mipLevelCount; i<n; ++i){
				for(let renderPassEncoder of beginRenderPass('[0,0,0,0]+store', commandEncoder, texture.createView({baseMipLevel:i,mipLevelCount:1}))){
					drawFn(renderPassEncoder, {baseTexture: texture.createView({baseMipLevel:i-1,mipLevelCount:1})});
				}
			}
		}
	}
}();

exports.drawMipmap = drawMipmap;
