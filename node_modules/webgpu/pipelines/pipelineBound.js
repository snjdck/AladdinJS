'use strict';

const Vulkan = require('../Vulkan');

module.exports = function(){
	const {device} = Vulkan;
	return device.createRenderPipeline({
		layout: device.createPipelineLayout({
			bindGroupLayouts:[
				Vulkan.bindGroupLayoutDict.bindGroupLayout,
				Vulkan.bindGroupLayoutDict.bindGroupLayout2Dynamic,
		]}),
		vertexStage: {
			module: device.createShaderModule({
				code: Vulkan.shader_bound.vertexCode,
			}),
			entryPoint: 'main'
		},
		fragmentStage: {
			module: device.createShaderModule({
				code: Vulkan.shader_bound.fragmentCode,
			}),
			entryPoint: 'main'
		},
		primitiveTopology: 'line-list',
		colorStates:[{
			format: Vulkan.swapChainFormat,
			colorBlend: {
				srcFactor: 'src-alpha',
				dstFactor: 'one-minus-src-alpha',
				operation: 'add'
			},
			alphaBlend: {
				srcFactor: 'src-alpha',
				dstFactor: 'one-minus-src-alpha',
				operation: 'add'
			}
		}],
		depthStencilState: {
			format: 'depth24plus-stencil8',
			depthWriteEnabled: true,
			depthCompare: 'less-equal',
		}
	});
}