'use strict';

const Vulkan = require('../Vulkan');
const traverseTree = require('utils/traverseTree');

const drawScene2D = function(){
	const renderPassDesc = {
		colorAttachments: [{
			attachment: null,
			loadValue: 'load'
		}]
	};
	function onDraw(item){
		if(!item.visible)return true;
		const {filter} = item;
		if(filter){
			Vulkan.bitmapQueue.add(filter);
			return true;
		}
		Vulkan.render2D.draw(item);
	}
	return function(root){
		const {mainColorTexture, bitmapQueue} = Vulkan;

		traverseTree(root, onDraw);
		
		renderPassDesc.colorAttachments[0].attachment = mainColorTexture;
		Vulkan.renderPassEncoder = Vulkan.commandEncoder.beginRenderPass(renderPassDesc);
		Vulkan.prepareDraw2D();
		Vulkan.bitmapQueue.draw(Vulkan.onBatchDraw2D).clear();
		Vulkan.renderPassEncoder.endPass();
	}
}();

module.exports = drawScene2D;
