'use strict';

const Vulkan = require('../Vulkan');
const ObjectCache = require('utils/ObjectCache');

function Camera3DGPUResourceManager(){
	const cache = new ObjectCache(() => {
		const {device} = Vulkan;

		const uniformBuffer = device.createBuffer({
			size: 7 * 4 * 4,
			usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST
		});

		const mvpBindGroup = device.createBindGroup({
			layout: Vulkan.bindGroupLayoutDict.bindGroupLayout,
			entries: [{
				binding: 0,
				resource: {buffer: uniformBuffer}
			},{	binding: 1,
				resource: device.createSampler({
					addressModeU: 'repeat',
					addressModeV: 'repeat',
					magFilter: 'linear',
					minFilter: 'linear',
				})
			}]
		});

		const cullBindGroup = device.createBindGroup({
			layout: Vulkan.bindGroupLayoutDict.bindGroupLayout2,
			entries: [{
				binding: 0,
				resource: {buffer: uniformBuffer}
			}]
		});

		return {
			uniformBuffer,
			mvpBindGroup,
			cullBindGroup,
		}
	});
	return {
		reset: () => cache.putAllIn(),
		getOut: () => cache.getOut(),
	}
}

module.exports = Camera3DGPUResourceManager;
