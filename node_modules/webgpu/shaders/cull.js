const numParticles = 10;
const code = `#version 450
/*
    void draw(GPUSize32 vertexCount, optional GPUSize32 instanceCount = 1,
              optional GPUSize32 firstVertex = 0, optional GPUSize32 firstInstance = 0);
    void drawIndexed(GPUSize32 indexCount, optional GPUSize32 instanceCount = 1,
                     optional GPUSize32 firstIndex = 0,
                     optional GPUSignedOffset32 baseVertex = 0,
                     optional GPUSize32 firstInstance = 0);
*/

/*
layout(std140, set = 0, binding = 0)
uniform SimParams {
	float deltaT;
	float rule1Distance;
	float rule2Distance;
	float rule3Distance;
	float rule1Scale;
	float rule2Scale;
	float rule3Scale;
} params;
*/

layout(set=1, binding=0)
uniform WORLD_BLOCK {
	mat3x4 worldMatrixList[100];
};

layout(set=2, binding=0)
uniform MVP_BLOCK {
	mat4 screenMatrix;
	mat3x4 cameraMatrix;
	vec3 boundList[20];
};

layout(set=0, binding=0)
buffer ParticlesA {
	uvec4 particles[];
};

void main() {
	uint index = gl_GlobalInvocationID.x;
	uint boundIndex = index << 1;
	vec3 boundMin = boundList[boundIndex];
	vec3 boundMax = boundList[boundIndex+1];
	vec4 pos = vec4(vec4(boundMin, 1) * cameraMatrix, 1) * screenMatrix;
	//pos = pos / pos.w;

	particles[index].y = 1;
}
`;


module.exports = code;
