'use strict';

const ClassifierFactory = require('./helper/ClassifierFactory');

const classifyMaterial = ClassifierFactory(drawUnit => drawUnit.material.constructor, ([a], [b]) => a.order - b.order);
const classifyMesh = ClassifierFactory(drawUnit => drawUnit.entity.mesh);

class DrawUnitBucket
{
	constructor(useCameraFlag=true){
		this.list = [];
		this.useCameraFlag = useCameraFlag;
		this.cameraIndex = 0;
	}

	add(element){
		if(this.useCameraFlag){
			element.cameraIndex = this.cameraIndex;
		}
		this.list.push(element);
	}

	clear(){
		this.list.length = 0;
	}

	draw(){
		for(const [materialType, entityList] of classifyMaterial(this.list)){
			if(!materialType.useMeshFlag){
				materialType.draw(entityList);
				continue;
			}
			for(const [mesh, subEntityList] of classifyMesh(entityList)){
				materialType.draw(subEntityList, mesh);
			}
		}
		return this;
	}
}

module.exports = DrawUnitBucket;
