'use strict';

const DisplayObject = require('./DisplayObject');
const {Matrix2D} = require('opengl/math');
const RADIAN = Math.PI / 180;

class DisplayObject2D extends DisplayObject
{
	constructor(){
		super(Matrix2D);

		this.x = 0.0;
		this.y = 0.0;
		this.scaleX = 1.0;
		this.scaleY = 1.0;
		this.rotation = 0.0;
	}

	get transform(){
		Matrix2D.compose(this._localMatrix,
			this.scaleX, this.scaleY,
			this.rotation * RADIAN,
			this.x, this.y
		);
		return this._localMatrix;
	}

	addChild(child){
		return this.addChildAt(child, this.numChildren);
	}

	removeChild(child){
		let index = this.getChildIndex(child);
		if(index >= 0)
			return this.removeChildAt(index);
	}

	addChildAt(child, index){
		console.assert(0 <= index && index <= this.numChildren);

		if(child.parent){
			if(child.parent === this){
				this.setChildIndex(child, Math.min(index, this.numChildren-1));
				return child;
			}
			child.parent.removeChild(child);
		}

		let {children} = this;
		children.splice(index, 0, child);
		child._parent = this;

		return child;
	}

	removeChildAt(index){
		console.assert(0 <= index && index < this.numChildren);
		let child = this._children.splice(index, 1)[0];
		child._parent = null;
		return child;
	}

	getChildAt(index){
		console.assert(0 <= index && index < this.numChildren);
		return this._children[index];
	}

	getChildIndex(child){
		return this._children.indexOf(child);
	}

	setChildIndex(child, index){
		console.assert(0 <= index && index < this.numChildren);
		let prevIndex = this.getChildIndex(child);
		if(prevIndex < 0 || prevIndex === index)return;
		let {_children} = this;
		_children.splice(prevIndex, 1);
		_children.splice(index, 0, child);
	}

	swapChildren(child1, child2){
		this.swapChildrenAt(this.getChildIndex(child1), this.getChildIndex(child2));
	}

	swapChildrenAt(index1, index2){
		if(index1 === index2)return;
		let {_children} = this;
		let child1 = _children[index1];
		let child2 = _children[index2];
		if(child1 && child2){
			_children[index1] = child2;
			_children[index2] = child1;
		}
	}

	get bottomChild(){
		return this.getChildAt(0);
	}

	get topChild(){
		return this.getChildAt(this.numChildren-1);
	}

	swapChildToTop(child){
		let childIndex = getChildIndex(child);
		if(childIndex < 0)return;
		let lastIndex = this.numChildren - 1;
		if(childIndex < lastIndex){
			this.swapChildrenAt(childIndex, lastIndex);
		}
	}

	swapChildToBottom(child){
		let childIndex = this.getChildIndex(child);
		if(childIndex > 0){
			this.swapChildrenAt(childIndex, 0);
		}
	}
}

module.exports = DisplayObject2D;
