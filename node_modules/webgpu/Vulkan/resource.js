const Vulkan = require('./index');
const {TexturePool, BufferPool} = require('../helper/ResourcePool');

const newBufferPool = usage => BufferPool(1000, size => {
	console.log('new buffer', usage, size);
	let buffer = Vulkan.device.createBuffer({usage, size})
	return {
		buffer,
		onDestroy(){
			console.log('destroy buffer', usage, size);
			buffer.destroy();
		}
	};
});

const fetchBuffer = function(){
	const forEachFn = v => v();
	const map = new Map();
	return query => {
		if(query === undefined)return map.forEach(forEachFn);
		const {usage, size} = query;
		if(!map.has(usage)){
			map.set(usage, newBufferPool(usage))
		}
		return map.get(usage)(size);
	}
}();

exports.fetchBuffer = fetchBuffer;
