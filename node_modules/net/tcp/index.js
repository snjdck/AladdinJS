'use strict';

const listenPacket = require('../listenPacket');
const {loopRange} = require('../../utils/counter');
const {waitWhen} = require('../../utils/events');

module.exports = function(socket, Packet, codec, timeout=10000){
	listenPacket(socket, Packet);
	socket.on('packet', ({reqId, msgId, payload}) => {
		if(reqId !== 0)return;
		socket.emit('notify', msgId, payload && codec.decode(payload));
	});
	const nextReqId = loopRange(0xFFFF);
	return (msgId, payload, waitFlag=true) => {
		const packet = new Packet(msgId, payload && codec.encode(payload));
		packet.reqId = nextReqId() + 1;
		socket.write(packet.toBytes());
		if(!waitFlag)return;
		return waitWhen(socket, 'packet', timeout, v => packet.reqId === v.reqId && codec.decode(v.payload));
	}
}
