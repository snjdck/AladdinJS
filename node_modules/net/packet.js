'use strict';

const composeFactory = (concatFn, checkFn, valueFn) => (...args) => data => {
	concatFn(data, ...args);
	if(!checkFn(...args))return false;
	return valueFn ? valueFn(...args) : args[0];
}

async function* readStream(stream){
	const reader = stream.getReader();
	try{
		for(;;){
			const {done, value} = await reader.read();
			if(done)return;
			yield value;
		}
	}finally{
		reader.releaseLock();
	}
}

async function writeStream(stream, value){
	const writer = stream.getWriter();
	try{
		return await writer.write(value);
	}finally{
		writer.releaseLock();
	}
}

exports.composeFactory = composeFactory;
exports.readStream = readStream;
exports.writeStream = writeStream;
