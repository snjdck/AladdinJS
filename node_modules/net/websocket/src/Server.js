
const http = require('http');
const crypto = require('crypto');
const WebSocketClient = require('./Client');

const createResponse = (response => key => {
	key = key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11';
	key = crypto.createHash('sha1').update(key).digest('base64');
	response[3] = `Sec-WebSocket-Accept: ${key}`;
	return response.join('\r\n');
})(['HTTP/1.1 101 Switching Protocols', 'Connection: Upgrade', 'Upgrade: websocket', null, '', '']);

function onUpgrade(request, socket){
	if(request.method !== 'GET')return;
	const headers = request.headers;
	if(headers.connection !== 'Upgrade' || headers.upgrade !== 'websocket')return;
	socket.write(createResponse(headers['sec-websocket-key']));
	this(new WebSocketClient(socket), request.url);
}

module.exports = function(onConnect, port=1234, host='127.0.0.1'){
	let server = new http.Server();
	server.on('upgrade', onUpgrade.bind(onConnect));
	server.on('error', console.log);
	server.listen(port, host);
	console.log(`server listen: ${host}:${port}`);
	return server;
}