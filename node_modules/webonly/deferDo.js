'use strict';

const factory = requestFn => handler => {
	const itemSet = new Set();
	function callback(){
		handler(itemSet);
		itemSet.clear();
	}
	return item => {
		if(itemSet.size <= 0)requestFn(callback);
		itemSet.add(item);
	}
}

const everyDo = fn => set => set.forEach(fn);
const everyCall = name => everyDo(v => v?.[name]());

exports.everyDo = everyDo;
exports.everyCall = everyCall;

exports.immediateDo = factory(setTimeout);
exports.idleDo = factory(requestIdleCallback);
exports.nextFrameDo = factory(requestAnimationFrame);
exports.deferDo = factory(queueMicrotask);
