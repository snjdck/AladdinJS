'use strict';

const calcSign = ({shiftKey,ctrlKey,altKey,keyCode}) => `${Number(shiftKey)}+${Number(ctrlKey)}+${Number(altKey)}+${keyCode}`;
const equals = (a, b) => a.shiftKey === b.shiftKey && a.ctrlKey === b.ctrlKey && a.altKey === b.altKey && a.keyCode === b.keyCode;

const register = function(){
	const dict = Object.create(null);
	window.addEventListener('keydown', evt => {
		if(evt.repeat)return;
		for(const {info, callback} of Object.values(dict)){
			if(equals(info, evt)){
				callback();
				break;
			}
		}
	});
	return function(key, callback){
		const info = {ctrlKey:false,shiftKey:false,altKey:false,keyCode:0};
		for(const k of key.split('+')){
			switch(k.toLowerCase()){
				case 'shift':info.shiftKey = true;break;
				case 'ctrl':info.ctrlKey = true;break;
				case 'alt':info.altKey = true;break;
				default:info.keyCode = k.toUpperCase().charCodeAt();
			}
		}
		const sign = calcSign(info);
		if(sign in dict)return;
		dict[sign] = {info, callback};
		return () => delete dict[sign];
	}
}();

module.exports = register;
