/*
  0  
5   1
  6  
4   2
  3   7
*/

class SevenSegment
{
public:
	SevenSegment(byte clk_pin, byte dio_pin);
	void show(float value);
	void display(byte *data);
private:
	void command(byte address, byte command);
	void signal(bool flag);
	void write(byte data);

	byte clk_pin;
	byte dio_pin;
};

SevenSegment::SevenSegment(byte clk_pin, byte dio_pin)
{
	this->clk_pin = clk_pin;
	this->dio_pin = dio_pin;
	pinMode(clk_pin, OUTPUT);
	pinMode(dio_pin, OUTPUT);
	this->command(0x48, 0x21);
}

void SevenSegment::show(float value)
{
	byte DIGIT[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f};
	String text(constrain(value, -999, 9999), 3);
	bool hasDot = text.indexOf('.') >= 0;
	int length = min(4 + hasDot, text.length());
	if(hasDot){
		while(text[length-1] == '0'){
			--length;
		}
		if(text[length-1] == '.'){
			--length;
		}
	}
	byte data[4] = {0};
	bool hasComma = false;
	for(int i=length-1, k=3; i>=0; --i){
		if(text[i] == '-'){
			data[k] = 0x40;
			break;
		}
		if(text[i] == '.'){
			hasComma = true;
			continue;
		}
		data[k] = DIGIT[text[i] - '0'];
		if(hasComma){
			data[k] |= 0x80;
			hasComma = false;
		}
		--k;
	}
	this->display(data);
}

void SevenSegment::display(byte *data)
{
	for(int i=0; i<4; ++i){
		this->command(0x68 + 2 * i, data[i]);
	}
}

void SevenSegment::command(byte address, byte command)
{
	this->signal(true);
	this->write(address);
	this->write(command);
	this->signal(false);
}

void SevenSegment::signal(bool flag)
{
	digitalWrite(clk_pin, HIGH);
	digitalWrite(dio_pin, flag);
	delayMicroseconds(2);
	digitalWrite(dio_pin, !flag);
}

void SevenSegment::write(byte data)
{
	for(int i=0; i<8; ++i){
		digitalWrite(clk_pin, LOW);
		digitalWrite(dio_pin, data & 0x80);
		delayMicroseconds(3);
		digitalWrite(clk_pin, HIGH);
		delayMicroseconds(3);
		data <<= 1;
	}
	digitalWrite(clk_pin, LOW);
	delayMicroseconds(5);
	pinMode(dio_pin, INPUT);
	for(int i=0; digitalRead(dio_pin) && i < 5000; ++i){
		delayMicroseconds(1);
	}
	pinMode(dio_pin, OUTPUT);
	digitalWrite(clk_pin, HIGH);
	delayMicroseconds(2);
	digitalWrite(clk_pin, LOW);
}
