"use strict";

const DisplayObject2D = require("../DisplayObject2D");
const DisplayObject3D = require("../DisplayObject3D");
const {Camera3D, Lens} = require("../cameras");
const {DrawMode} = require("../renderers");

class Bitmap3D extends DisplayObject2D
{
	constructor(width, height){
		super();
		this.root3d = new DisplayObject3D();
		this.width = width;
		this.height = height;
		this.updateEnabled = true;
		this.camera = new Camera3D(Lens.OrthoLH(width, height, -1000, 1000));
	}

	onUpdate(timeElapsed){
		super.onUpdate(timeElapsed);
		if(this.updateEnabled){
			this.root3d.onUpdate(timeElapsed);
		}
	}

	onDraw(gl, mode){
		if(mode == DrawMode.Pick){
			return;
		}
		let {camera, root3d, x, y, width, height} = this;
		gl.render2d.submit();
		gl.renderStateStack.save(gl.VIEWPORT);
		gl.clear(gl.DEPTH_BUFFER_BIT);
		gl.viewport(x, gl.render2d.height - (y + height), width, height);
		camera.render(root3d, gl, DrawMode.Normal);
		gl.renderStateStack.load(gl.VIEWPORT);
		gl.render2d.invalidate();
	}
}

module.exports = Bitmap3D;