'use strict';

const crypto = require('crypto');
const load = require('../net/load');

const md5 = v => crypto.createHash('md5').update(v).digest('hex');
const isString = v => typeof v === 'string';

function auth(appkey, sectetkey){
	return function(){
		const timestamp = Date.now();
		return {appkey, timestamp, sign: md5(sectetkey + timestamp)};
	}
}

function garbageTextSearch(user, text, cityId=310000){
	return garbageSearch(user, 'https://aiapi.jd.com/jdai/garbageTextSearch', {cityId, text});
}

function garbageImageSearch(user, data, cityId=310000){
	return garbageSearch(user, 'https://aiapi.jd.com/jdai/garbageImageSearch', {cityId, imgBase64:data.toString('base64')});
}

async function garbageSearch(user, url, data){
	const {code, result} = await load(url, {query: user(), json: data});
	if(code != 10000 || result.status != 0)return '';
	const list = result.garbage_info.filter(v => v.confidence > 0).sort((a, b) => b.confidence - a.confidence).map(v => v.cate_name);
	return list.length > 0 ? list[0] : '';
}

