"use strict";

const Material = require("./Material");

class TextureMaterial extends Material{
	constructor(texture){
		super("shader3d&normal");
		this.texture = texture;
	}

	onActiveState(gl){
		gl.enable(gl.DEPTH_TEST);
		gl.depthMask(true);
		gl.depthFunc(gl.LEQUAL);
		gl.enable(gl.BLEND);
	}

	onActiveUniform(gl, camera, program){
		let {uniformBuffer} = gl.render3d;

		uniformBuffer.active(gl);

		uniformBuffer.setFloatv(0, camera.lens);
		camera.worldTransformInvert.copyToArray(uniformBuffer.floatView, 16);
		
		gl.activeTexture(gl.TEXTURE0);
		gl.uniform1i(gl.getUniformLocation(program, "sampler0"), 0);
	}

	onActiveVAO(gl, {bindCount, boneCount}){
		let {uniformBuffer} = gl.render3d;
		uniformBuffer.setInts(25, bindCount, boneCount);
	}

	onDraw(uniformBuffer, {boneMatrixList}, index){
		uniformBuffer.setFloatv(28 + index * boneMatrixList.length, boneMatrixList);
	}
}

module.exports = TextureMaterial;