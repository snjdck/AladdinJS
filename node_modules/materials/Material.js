"use strict";

class Material{
	constructor(shader){
		this.shader = shader;
	}
	render(gl, camera, drawUnitList){
		if(drawUnitList.length <= 0)
			return;
		this.active(gl, camera);
		for(let drawUnit of drawUnitList){
			drawUnit.material.draw(gl, drawUnit);
		}
	}
	active(gl, camera){
		let program = gl.programMgr.fetch(this.shader);
		gl.useProgram(program);
		this.onActiveUniform(gl, camera, program);
		this.onActiveState(gl);
	}
	draw(gl, drawUnit){
		this.onDraw(gl, drawUnit);
		let vao = drawUnit.vao;
		vao.active(gl);
		vao.draw(gl);
	}
	onUpdate(timeElapsed){}
	onActiveState(gl){}
	onActiveUniform(gl, camera, program){}
	onDraw(gl, drawUnit){}
}

module.exports = Material;