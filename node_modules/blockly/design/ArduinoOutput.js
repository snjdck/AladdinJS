"use strict";

class ArduinoOutput
{
	constructor(){
		this.includeSet = new Set();
		this.varDict = new Map();
		this.codeList = [];
	}
	
	addInclude(path){
		this.includeSet.add(path);
	}
	
	addVarDefine(varType, varName){
		this.varDict.set(varName, `${varType} ${varName};`);
	}
	
	addCode(code, indent){
		this.codeList.push("\t".repeat(indent) + code);
	}
	
	replaceLastCode(code, indent){
		this.codeList.pop();
		this.addCode(code, indent);
	}
	
	toString(){
		let {includeSet, varDict, codeList} = this;
		let result = "";
		result += join(Array.from(includeSet, path => `#include <${path}>`));
		result += join(Array.from(varDict.values()));
		result += join(codeList);
		return result;
	}
}

const join = v => v.join("\n") + "\n\n";

module.exports = ArduinoOutput;