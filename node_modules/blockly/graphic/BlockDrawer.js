"use strict";

const a = 10;
const b = 4;
const len = 20;

const armW = 10;
const armH = 10;

const minStatementWidth = 96;

function drawExpression(w, h)
{
	w = Math.max(w + 4, h);
	let r = h * 0.5;
	return `M2,0 h ${w} a ${r},${r} 0,0,1 0,${h} h ${-w} a ${r},${r} 0,0,1 0,${-h} Z`;
}

function drawTop(w, h, hasPrev){
	if(hasPrev)
		return `M 0,0 h ${a} v ${b} h ${len} v ${-b} H ${w} V ${h}`;
	return `M 0,0 c 25,-22 71,-22 96,0 H ${w} V ${h}`;
}

function drawBottom(offsetX=0){
	return `H ${a+len+offsetX} v ${b} h ${-len} v ${-b} H ${offsetX}`;
}

function drawMiddle(w, childHeight){
	return drawBottom(armW) + `v ${childHeight} H ${w} v ${armH}`;
}

function drawStatement(w, h, hasPrev=true, hasNext=true, ...childHeightList)
{
	w = Math.max(w, minStatementWidth);
	return drawTop(w, h, hasPrev) + childHeightList.map(childHeight => drawMiddle(w, childHeight)).join("") + (hasNext ? drawBottom() : "H 0") + "Z";
}

module.exports = {
	drawStatement,
	drawExpression,
	armW,
	armH,
	b
};
