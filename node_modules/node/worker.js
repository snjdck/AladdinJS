'use strict';

const {Worker} = require('worker_threads');
const numCPU = require('os').cpus().length;
const createTask = require('../utils/task');
const {LoopRange} = require('../utils/counter');

module.exports = function(code, count=numCPU){
	const workerCode = `const handler = ${code};const {parentPort} = require('worker_threads');parentPort.on('message', data => parentPort.postMessage(handler(data)));`;
	const workerList = [];
	/*
	for(let i=0; i<count; ++i){
		const worker = new Worker(workerCode, {eval: true, workerData: i});
		const listenEvent = listen(worker, 'message');
		workerList.push(task => {
			worker.postMessage(task);
			return listenEvent();
		});
	}
	const nextIndex = LoopRange(count);
	return task => workerList[nextIndex()](task);
	//*/
	for(let i=0; i<count; ++i){
		workerList.push(new Worker(workerCode, {eval: true, workerData: i}));
	}
	return createTask(task => new Promise(resolve => {
		const worker = workerList.pop();
		worker.once('message', data => {
			workerList.push(worker);
			resolve(data);
		});
		worker.postMessage(task);
	}), count);
}
