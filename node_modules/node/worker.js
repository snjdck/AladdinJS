'use strict';

const {Worker} = require('worker_threads');
const numCPU = require('os').cpus().length;
const createTask = require('../utils/task');
const {loopRange} = require('../utils/counter');

module.exports = function(code, count=numCPU){
	const workerCode = `const handler = ${code};const {parentPort} = require('worker_threads');parentPort.on('message', data => parentPort.postMessage(handler(data)));`;
	const workerList = [];
	for(let i=0; i<count; ++i){
		workerList.push(new Worker(workerCode, {eval: true, workerData: i}));
	}
	/*
	const nextIndex = loopRange(count);
	const listenList = workerList.map(worker => listen(worker, 'message'));
	return task => new Promise(resolve => {
		const index = nextIndex();
		listenList[index](resolve);
		workerList[index].postMessage(task);
	});
	//*/
	return createTask(task => new Promise(resolve => {
		const worker = workerList.pop();
		worker.once('message', data => {
			workerList.push(worker);
			resolve(data);
		});
		worker.postMessage(task);
	}), count);
}
