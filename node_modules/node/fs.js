'use strict';

const {join} = require('path');
const {
	readdirSync, rmdirSync, unlinkSync,
	readFile, writeFile,
} = require('fs');

const options = {withFileTypes:true};

function clearFolderSync(path, deleteSelf=false){
	for(const file of readdirSync(path, options)){
		const real_path = join(path, file.name);
		if(file.isDirectory()){
			clearFolderSync(real_path, true);
		}else if(file.isFile()){
			unlinkSync(real_path);
		}
	}
	if(deleteSelf)rmdirSync(path);
}

function writeFileAsync(path, data){
	return new Promise((resolve, reject) => {
		writeFile(path, data, error => error ? reject(error) : resolve());
	});
}

function readFileAsync(path, encoding=null){
	return new Promise((resolve, reject) => {
		readFile(path, {encoding}, (error, data) => error ? reject(error) : resolve(data));
	});
}

function walkDir(path, callback, dirFlag=0){
	for(const file of readdirSync(path, options)){
		const real_path = join(path, file.name);
		if(file.isDirectory()){
			if(dirFlag < 0)callback(real_path, true);
			walkDir(real_path, callback);
			if(dirFlag > 0)callback(real_path, true);
		}else if(file.isFile()){
			callback(real_path);
		}
	}
}

exports.clearFolderSync = clearFolderSync;
exports.writeFileAsync = writeFileAsync;
exports.readFileAsync = readFileAsync;
exports.walkDir = walkDir;
