
const tree = new Element('div', {id:'virtual-container'}, [
	new Element('p', null, ['virtual dom']),
	new Element('div', null, ['before update']),
	new Element('ul', null, [
		new Element('li', {class: 'item'}, ['item 1']),
		new Element('li', {class: 'item'}, ['item 2']),
		new Element('li', {class: 'item'}, ['item 3']),
	]),
	new Element('div', null, ['foot']),
])

const newTree = new Element('div', {id:'virtual-container'}, [
	new Element('h3', {onClick:evt => console.log('click')}, ['virtual dom']),
	new Element('div', null, ['after update']),
	new Element('ul', {class:'marginLeft10'}, [
		new Element('li', {class: 'item'}, ['item 1']),
		//new Element('li', {class: 'item'}, ['item 2']),
		new Element('li', {class: 'item'}, ['item 3']),
		new Element('li', {class: 'item'}, [new Element('p', null, ['==='])]),
	]),
	'fuck',
	new Element('p', null, ['new div']),
	new Element(props => new Element('div', props, ['??']), {id:'aaa'}),
])

//1,4,5,9,10,0,0

//console.log(collectChildren(tree))
console.log(diff(tree, newTree))
//*
const root = tree.render();
document.getElementById("virtualDom").appendChild(root);
setTimeout(() => {
	dfsWalk(root, diff(tree, newTree))

}, 500)
//*/