'use strict';

require('./MenuBar.css');

const {createElement} = require('../createElement');

const MenuBar = createElement(function(tag, end, {port, board, onClick}){
	const [zoom, setZoom] = React.useState(0);
	tag('ul', {className:'menu-bar'/*,style:{'--menu-z-index':71}*/, onMouseDown(evt){
		const key = evt.target.href?.split('#', 2)[1];
		onClick(key)
	}})
		tag('li', {className:'drag'}), tag('a'), tag`WeeeCode`, end('a'), end('li')
		tag('li', {className:'separator'}), end('li')
		tag('li'), tag('div'), tag`文件`, end('div')
			tag('ul')
				tag('li'), tag('div'), tag`Home`, end('div'), end('li')
				tag('li'), tag('div'), tag`Feeds`, end('div'), end('li')
				tag('li'), tag('div'), tag`Archive`, end('div'), end('li')
			end('ul')
		end('li')
		tag('li'), tag('div'), tag`编辑`, end('div')
			tag('ul')
				tag('li'), tag('div'), tag`1st submenu`, end('div'), end('li')
				tag('li'), tag('div'), tag`Overview`, end('div'), end('li')
				tag('li'), tag('div'), tag`Instructions`, end('div'), end('li')
				tag('li'), tag('div'), tag`Examples`, end('div')
					tag('ul')
						tag('li'), tag('div'), tag`2nd submenu`, end('div')
							tag('ul')
								tag('li'), tag('div'), tag`3rd submenu`, end('div')
								end('li')
								tag('li'), tag('div'), tag`Item 2`, end('div'), end('li')
								tag('li'), tag('div'), tag`Item 3`, end('div'), end('li')
								tag('li'), tag('div'), tag`Item 4`, end('div'), end('li')
							end('ul')
						end('li')
						tag('li'), tag('div'), tag`Top to bottom`, end('div'), end('li')
						tag('li'), tag('div'), tag`Bottom to top`, end('div')
							tag('ul')
								tag('li'), tag('div'), tag`3rd submenu`, end('div')
									tag('ul')
										tag('li'), tag('div'), tag`3rd submenu`, end('div')
										end('li')
										tag('li'), tag('div'), tag`Item 2`, end('div'), end('li')
										tag('li'), tag('div'), tag`Item 3`, end('div'), end('li')
										tag('li'), tag('div'), tag`Item 4`, end('div'), end('li')
									end('ul')
								end('li')
								tag('li'), tag('div'), tag`Item 2`, end('div'), end('li')
								tag('li'), tag('div'), tag`Item 3`, end('div'), end('li')
								tag('li'), tag('div'), tag`Item 4`, end('div'), end('li')
							end('ul')
						end('li')
						tag('li'), tag('div'), tag`Left to right`, end('div'), end('li')
						tag('li'), tag('div'), tag`Right to left`, end('div'), end('li')
					end('ul')
				end('li')
				tag('li'), tag('div'), tag`Troubleshooting`, end('div'), end('li')
			end('ul')
		end('li')
		tag('li'), tag('div'), tag`Single`, end('div')
			tag('ul')
				tag('li'), tag('div'), tag`Test`, end('div')
					tag('ul')
						tag('li'), tag('div'), tag`A`, end('div'), end('li')
					end('ul')
				end('li')
				tag('li'), tag('div'), tag`Test`, end('div')
					tag('ul')
						tag('li'), tag('div'), tag`A`, end('div'), end('li')
					end('ul')
				end('li')
				tag('li'), tag('div'), tag`Examples`, end('div'), end('li')
				tag('li'), tag('div'), tag`Test`, end('div')
					tag('ul')
						tag('li'), tag('div'), tag`A`, end('div'), end('li')
					end('ul')
				end('li')
			end('ul')
		end('li')
		tag('li'), tag('div'), tag`窗口`, end('div')
			tag('ul')
				tag('li'), tag('div', {onMouseDown(){setWidth('50vw')}}), tag`5 : 5`, end('div'), end('li')
				tag('li'), tag('div', {onMouseDown(){setWidth('40vw')}}), tag`6 : 4`, end('div'), end('li')
				tag('li'), tag('div', {onMouseDown(){setWidth('30vw')}}), tag`7 : 3`, end('div'), end('li')
				tag('li'), tag('div', {onMouseDown(){setWidth('20vw')}}), tag`8 : 2`, end('div'), end('li')
				tag('li'), tag('div'), tag`缩放`, end('div')
					const win = nw.Window.get();
					const {zoomLevel} = win;
					tag('ul')
						tag('li', {className:zoomLevel == 0 && 'disabled'}), tag('div', {onMouseDown(){
							nw.Window.get().zoomLevel = 0
						}}), tag`原始`, end('div'), end('li')
						tag('li'), tag('div', {onMouseDown(){
							const win = nw.Window.get();
							win.zoomLevel = Math.min(win.zoomLevel + 1, 4);
						}}), tag`放大`, end('div'), end('li')
						tag('li', {className:zoomLevel != 0 && 'disabled'}), tag('a', {onMouseDown(){
							const win = nw.Window.get();
							win.zoomLevel = Math.max(win.zoomLevel - 1, -2);
						}}), tag`缩小`, end('a'), end('li')
					end('ul')
				end('li')
			end('ul')
		end('li')
		tag('li'), tag('div'), tag`恢复固件`, end('div')
			tag('ul')
				tag('li'), tag('a', {href:'#online_firmware'}), tag`在线固件`, end('a'), end('li')
				tag('li', {className:'disabled'}), tag('div'), tag`出厂固件`, end('div')
					tag('ul')
						tag('li'), tag('div'), tag`酷跑侠`, end('div'), end('li')
						tag('li'), tag('div'), tag`编程侠`, end('div'), end('li')
						tag('li'), tag('div'), tag`六合一`, end('div'), end('li')
						tag('li'), tag('div'), tag`智能家居`, end('div'), end('li')
					end('ul')
				end('li')
			end('ul')
		end('li')
		tag('li'), tag('div'), tag`帮助`, end('div')
			tag('ul')
				tag('li'), tag('div'), tag`安装驱动`, end('div'), end('li')
				tag('li'), tag('div'), tag`检查更新`, end('div'), end('li')
				tag('li'), tag('div'), tag`公司主页`, end('div'), end('li')
			end('ul')
		end('li')
		tag('li', {className:'drag',style:{width:'100%'}}), end('li')
		tag('li'), tag('a', {'data-title':'串口', href:'#choosePort'}), tag`${port}`, end('a'), end('li')
		tag('li'), tag('a', {'data-title':'主板', href:'#chooseBoard'}), tag`${board}`, end('a'), end('li')
		tag('li', {className:'separator'}), end('li')
		tag('li'), tag('a', {onClick(){nw.Window.get().minimize()}}), tag`▁`, end('a'), end('li')
		tag('li'), tag('a', {onClick:maxFn}), tag`☐`, end('a'), end('li')
		tag('li'), tag('a', {onClick(){nw.Window.get().close()}}), tag`✕`, end('a'), end('li')
	end('ul')
});

const maxFn = function(){
	const win = nw.Window.get();
	let maxFlag = false;
	win.on('maximize', () => maxFlag = true);
	win.on('restore', () => maxFlag = false);
	return () => maxFlag ? win.restore() : win.maximize();
}();

function setWidth(value){
	document.querySelector('.frame > :nth-child(3)').style.width = value;
	window.dispatchEvent(new Event('resize'));
}

module.exports = MenuBar;
