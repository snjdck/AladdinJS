'use strict';

require('./TabPanel.css');

const {createElement} = require('../createElement');

const TabPanel = createElement(function(tag, end, {children}){
	const id = React.useId();
	tag('div', {className:'tab-panel'})
		React.Children.map(children, ({key}, i) => {
			tag('input', {type:'radio', name:id, id:id+i, defaultChecked: i == 0}, true)
		})
		tag('div')
			React.Children.map(children, ({key, props:{title, buttonList}}, i) => {
				tag('label', {htmlFor:id+i}), tag`${title}`, end('label')
				tag('span')
				if(buttonList){
					for(let {title, onClick} of buttonList){
						tag('a', {onClick})
							tag`${title}`
						end('a')
					}
				}
				end('span')
			})
		end('div')
		tag('div')
			React.Children.map(children, child => tag(React.cloneElement(child, {title:null})))
		end('div')
	end('div')
});
/*
const initTabPanel = function(){
	function onClick({target}){
		if(target.classList.contains('active')){
			return;
		}
		const tabList = target.parentNode.children;
		for(let i=tabList.length-1; i>=0; --i){
			const tab = tabList[i];
			const panel = tab.parentNode.nextElementSibling.children[i];
			const activeFlag = target == tab;
			tab.classList.toggle('active', activeFlag);
			panel.classList.toggle('active', activeFlag);
			if(activeFlag){
				panel.dispatchEvent(new Event('active'));
			}
		}
	}
	return function(panel){
		const tabList = panel.firstElementChild.children;
		for(let tab of tabList){
			tab.addEventListener('click', onClick);
		}
	}
}();
//*/
module.exports = TabPanel;
