const Matrix3D = require("Matrix3D");
var cameraMatrix = new Matrix3D();

class Render3D
{
	constructor(gl){
		this.gl = gl;
		this.zRange = 2000;
	}

	drawBegin(){
		var gl = this.gl;
		gl.enable(gl.DEPTH_TEST);
		gl.depthMask(true);
		gl.depthFunc(gl.LEQUAL);

		var program = gl.__program__["shader3d"];
		gl.useProgram(program);

		var address = gl.getUniformLocation(program, "screenMatrix");
		gl.uniform3f(address, 2 / gl.drawingBufferWidth, 2 / gl.drawingBufferHeight, 2 / this.zRange);

		var address = gl.getUniformLocation(program, "cameraMatrix");
		gl.uniformMatrix4fv(address, false, cameraMatrix);

		gl.uniform1i(gl.getUniformLocation(program, "sampler0"), 0);
	}

	drawEnd(){
	}
}

module.exports = Render3D;