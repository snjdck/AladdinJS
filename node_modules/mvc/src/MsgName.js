
class MsgName
{
	static ModuleStartup = Symbol('ModuleStartup');

	static assert(value){
		if(value instanceof this){
			return;
		}
		switch(typeof value){
			case "symbol":
			case "string":
				return;
		}
		console.assert(false, "msg.name must be 'symbol' or 'string'!", value);
	}

	static create(...nameList){
		let target = Object.create(null);
		for(let name of nameList)
			Object.defineProperty(target, name, {value: new MsgName(name), enumerable:true});
		return target;
	}

	constructor(desc){
		this._desc = desc;
		this._value = Symbol(desc);
	}

	[Symbol.toPrimitive](hint){
		return this._value;
	}

	valueOf(){
		return this._value;
	}

	get reply(){
		if(!this._reply){
			this._reply = Symbol(`${this._desc}#reply`);
		}
		return this._reply;
	}
}

export default MsgName;