"use strict";

class Filter2D
{
	draw(gl, target){
		gl.render2d.submit();
		gl.renderStateStack.save(gl.FRAMEBUFFER_BINDING, gl.CURRENT_PROGRAM);

		let imageFrameBuffer = this.borrowFrameBuffer(gl);
		target.onDraw(gl);
		gl.render2d.submit();

		let program = gl.programMgr.fetch(this.shader);
		gl.useProgram(program);

		this.onDraw(gl, program, imageFrameBuffer.colorBuffer);

		this.returnFrameBuffer(gl, imageFrameBuffer);

		gl.renderStateStack.load(gl.CURRENT_PROGRAM);
	}

	borrowFrameBuffer(gl){
		let frameBuffer = gl.renderTargetMgr.getOut();
		frameBuffer.active(gl);
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		return frameBuffer;
	}

	returnFrameBuffer(gl, frameBuffer){
		gl.renderTargetMgr.putIn(frameBuffer);
	}

	onDraw(gl, program, image){}
}

module.exports = Filter2D;