"use strict";

const Filter2D = require("./Filter2D");

class ColorMatrixFilter extends Filter2D
{
	constructor(){
		super();
		this.shader = "screen&filters/colormatrix";
		//this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
		this.matrix = new Float32Array([0.3, 0.3, 0.3, 0, 0.59, 0.59, 0.59, 0, 0.11, 0.11, 0.11, 0, 0, 0, 0, 1]);
		this.offset = new Float32Array([0, 0, 0, 0]);
	}

	onDraw(gl, program, image){
		gl.renderStateStack.load(gl.FRAMEBUFFER_BINDING);
		gl.bindTexture(gl.TEXTURE_2D, image);

		gl.uniformMatrix4fv(gl.getUniformLocation(program, "matrix"), false, this.matrix);
		gl.uniform4fv(gl.getUniformLocation(program, "offset"), this.offset);

		gl.render2d.drawScreen();
	}
}

module.exports = ColorMatrixFilter;