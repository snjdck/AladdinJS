"use strict";

const WebGL = require('../WebGL');
const Filter2D = require("./Filter2D");

class ColorMatrixFilter extends Filter2D
{
	constructor(){
		super();
		this.shader = 'screen&filters/colormatrix';
		//this.matrix = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
		this.matrix = new Float32Array([0.3, 0.3, 0.3, 0, 0.59, 0.59, 0.59, 0, 0.11, 0.11, 0.11, 0, 0, 0, 0, 1]);
		this.offset = new Float32Array([0, 0, 0, 0]);
	}

	onDraw(image){
		let {gl, drawScreen, renderStateStack} = WebGL;
		renderStateStack.load(gl.FRAMEBUFFER_BINDING);
		gl.bindTexture(gl.TEXTURE_2D, image);

		if(!this.addressSetFlag){
			this.addressSetFlag = true;
			let program = gl.getParameter(gl.CURRENT_PROGRAM);
			this.matrixAddress = gl.getUniformLocation(program, "matrix");
			this.offsetAddress = gl.getUniformLocation(program, "offset");
		}

		gl.uniformMatrix4fv(this.matrixAddress, false, this.matrix);
		gl.uniform4fv(this.offsetAddress, this.offset);

		drawScreen();
	}
}

module.exports = ColorMatrixFilter;