'use strict';

const WebGL = require('../WebGL');

class Filter2D
{
	onDraw(image, address){}

	onDrawBegin({filter}){
		let {gl, render2d, renderStateStack, renderTargetMgr} = WebGL;
		render2d.submit();
		renderStateStack.save(gl.DRAW_FRAMEBUFFER_BINDING, gl.CURRENT_PROGRAM);
		filter.imageFrameBuffer = renderTargetMgr.borrowFrameBuffer();
	}

	onDrawEnd({filter}){
		let {gl, render2d, renderStateStack, renderTargetMgr, programMgr} = WebGL;
		let {imageFrameBuffer} = filter;
		render2d.submit();
		let program = programMgr.useProgram(filter.shader);
		filter.onDraw(imageFrameBuffer.colorBuffer, program.address);
		renderTargetMgr.returnFrameBuffer(imageFrameBuffer);
		renderStateStack.load(gl.CURRENT_PROGRAM);
	}
}

module.exports = Filter2D;