
const WebGL = require('../WebGL');

class DataBuffer
{
	constructor(instanceFloatCount=0){
		this.instanceFloatCount = instanceFloatCount;
		this.data = new Float32Array(instanceFloatCount);
	}

	alloc(instanceCount){
		let {data, instanceFloatCount} = this;
		let size = instanceFloatCount * instanceCount;
		if(data.length < size){
			this.data = new Float32Array(size);
		}
	}

	update(instanceIndex, offset, ...value){
		let {data, instanceFloatCount} = this;
		data.set(value, instanceFloatCount * instanceIndex + offset);
	}

	upload(instanceCount, offset=0, target=WebGL2RenderingContext.ARRAY_BUFFER){
		let {gl} = WebGL;
		let {data, instanceFloatCount} = this;
		gl.bufferSubData(target, offset, data, 0, instanceFloatCount * instanceCount);
	}
}

module.exports = DataBuffer;