"use strict";

class ProfileManager{
	constructor(){
		this.profile3d = new Profile();
		this.profile2d = new Profile();
		this.reset();
	}

	reset(){
		this.profile3d.reset();
		this.profile2d.reset();
		console.log("-------------------------");
	}

	log(){
		console.log(`3d:(${this.profile3d})\n2d:(${this.profile2d})`);
	}
}

class Profile{
	constructor(){
		this.reset();	
	}

	reset(){
		this.shaderSwitchCount = 0;
		this.textureSwitchCount = 0;
		this.stateSwitchCount = 0;
		this.vaoSwitchCount = 0;
		this.drawCount = 0;
	}

	toString(){
		return [
			["shader", "shaderSwitchCount"],
			["texture", "textureSwitchCount"],
			["state", "stateSwitchCount"],
			["vao", "vaoSwitchCount"],
			["draw", "drawCount"]
		].map(([k, v]) => `${k}=${this[v]}`).join(",");
	}
}

module.exports = ProfileManager;
