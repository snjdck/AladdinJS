"use strict";

const WebGL = require('../WebGL');
const {decode} = require("fileformats/images");
const {createFetch} = require('utils/cache');

class TextureManager{
	constructor(){
		this.fetch = createFetch(this.doLoad);
	}

	doLoad(name, callback){
		const {assetMgr, gl} = WebGL;
		if(name.endsWith(".tga")){
			assetMgr.loadFile(name).then(data => {
				let image = decode(name, data);
				callback(createTexture(gl, image.width, image.height, image.data));
			});
		}else{
			assetMgr.loadImage(name).then(image => {
				callback(createTexture(gl, image.width, image.height, image));
			});
		}
	}
}

function createTexture(gl, width, height, imageRawData){
	let texture = gl.createTexture();
	gl.bindTexture(gl.TEXTURE_2D, texture);
	gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, width, height);
	gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, imageRawData);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
	gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
	//gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
	//gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
	texture.width = width;
	texture.height = height;
	return texture;
}

module.exports = TextureManager;
