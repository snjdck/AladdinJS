"use strict";

const Material = require("./Material");
const {RenderState} = require("../renderers");
const WebGL = require('../WebGL');
const UniformBlockIndex = require("../const/UniformBlockIndex");

class TextureMaterial extends Material{
	constructor(texture){
		super("shader3d&normal");
		this.texture = texture;
		this.renderState = RenderState.Texture;
	}

	onActiveUniform(camera, program){
		let {render3d:{uniformBuffer}} = WebGL;

		uniformBuffer.active();
		camera.mvpUniformBuffer.active(UniformBlockIndex.MVP_BLOCK);
	}

	onActiveVAO({vao:{bindCount, boneCount}}){
		let {render3d:{uniformBuffer}} = WebGL;
		uniformBuffer.setInts(1, bindCount, boneCount);
	}

	onDraw(uniformBuffer, {boneMatrixList}, index){
		uniformBuffer.setFloatv(4 + index * boneMatrixList.length, boneMatrixList);
	}
}

module.exports = TextureMaterial;