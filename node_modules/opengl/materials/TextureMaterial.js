
const Material = require('./Material');
const {RenderState} = require('../renderers');
const WebGL = require('../WebGL');
const {ProgramName} = require('../const');

class TextureMaterial extends Material{
	constructor(texture){
		super(ProgramName.shader3d_normal);
		this.texture = texture;
		this.renderState = RenderState.Texture;
	}

	onDraw(drawUnit, index, batchIndex){
		let {vao, boneMatrixList, vertexData} = drawUnit;
		let boneCount = vao.subMesh.boneCount;
		let {gl} = WebGL;
		let program = gl.getParameter(gl.CURRENT_PROGRAM);
		gl.uniform4fv(gl.getUniformLocation(program, `boneList[${index * boneCount << 1}]`), boneMatrixList);
		if(index == 0 && batchIndex == 0){
			this.onBindTexture(gl);
		}
		if(vertexData){
			vao.updateVertexBuffer(vertexData, batchIndex == 0);
		}
	}

	onBindTexture(gl){
		gl.bindTexture(gl.TEXTURE_2D, this.texture);
	}
}

module.exports = TextureMaterial;