'use strict';

function batchDraw(instanceCountPerDraw, instanceList){
	const totalInstanceCount = instanceList.length;
	if(totalInstanceCount <= 0)return 0;
	const updateFn = this.onUpdateBufferBatch || onUpdateBufferBatch;
	if(this.onPrepareBuffer){
		this.onPrepareBuffer(Math.min(totalInstanceCount, instanceCountPerDraw));
	}
	let instanceIndex = 0;
	let drawCount = 0;
	while(instanceIndex < totalInstanceCount){
		const instanceCount = Math.min(instanceCountPerDraw, totalInstanceCount - instanceIndex);
		updateFn.call(this, instanceList, instanceIndex, instanceCount, drawCount++);
		this.onUploadBufferAndDraw(instanceCount);
		instanceIndex += instanceCount;
	}
	return drawCount;
}

function onUpdateBufferBatch(instanceList, offset, instanceCount, batchIndex){
	for(let i=0; i<instanceCount; ++i){
		let instance = instanceList[offset+i];
		this.onUpdateBuffer(instance, i, batchIndex);
	}
}

module.exports = batchDraw;
