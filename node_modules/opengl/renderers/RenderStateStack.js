"use strict";

class RenderStateStack
{
	constructor(gl){
		this.gl = gl;
		this.stateStack = new StateStack();
	}

	save(...keys){
		let {gl, stateStack} = this;
		for(let key of keys){
			stateStack.push(key, gl.getParameter(key));
		}
	}

	load(...keys){
		let {gl, stateStack} = this;
		for(let key of keys){
			let value = stateStack.pop(key);
			switch(key){
			case gl.FRAMEBUFFER_BINDING:
				gl.bindFramebuffer(gl.FRAMEBUFFER, value);
				break;
			case gl.CURRENT_PROGRAM:
				gl.useProgram(value);
				break;
			case gl.VIEWPORT:
				gl.viewport(...value);
				break;
			}
		}
	}
}

class StateStack
{
	constructor(){
		this.stateDict = new Map();
	}

	push(key, value){
		let {stateDict} = this;
		if(stateDict.has(key)){
			stateDict.get(key).push(value);
		}else{
			stateDict.set(key, [value]);
		}
	}

	pop(key){
		return this.stateDict.get(key).pop();
	}
}

module.exports = RenderStateStack;