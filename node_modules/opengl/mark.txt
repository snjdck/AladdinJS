function({m, a, b, n1, n2, n3}, i){
  let t = m * i / 4;
  return (Math.abs(Math.cos(t) / a) ** n2 + Math.abs(Math.sin(t) / b) ** n3) ** (-1 / n1);
}

绘制缓冲区
WebGLRenderingContext.clear()
WebGLRenderingContext.drawArrays()
WebGLRenderingContext.drawElements()

Uniform 和 Attribute
WebGLRenderingContext.disableVertexAttribArray()
WebGLRenderingContext.enableVertexAttribArray()
WebGLRenderingContext.getAttribLocation()
WebGLRenderingContext.getUniformLocation()
WebGLRenderingContext.uniform[1234][fi][v]()
WebGLRenderingContext.uniformMatrix[234]fv()
WebGLRenderingContext.vertexAttrib[1234]f[v]()
WebGLRenderingContext.vertexAttribPointer()

纹理
WebGLRenderingContext.createTexture()
WebGLRenderingContext.bindTexture()
WebGLRenderingContext.copyTexImage2D()
WebGLRenderingContext.copyTexSubImage2D()
WebGLRenderingContext.texImage2D()
WebGLRenderingContext.texSubImage2D()
WebGLRenderingContext.texParameterf()
WebGLRenderingContext.texParameteri()

渲染缓冲区
WebGLRenderingContext.createRenderbuffer()
WebGLRenderingContext.bindRenderbuffer()
WebGLRenderingContext.renderbufferStorage()

帧缓冲区
WebGLRenderingContext.bindFramebuffer()
WebGLRenderingContext.createFramebuffer()
WebGLRenderingContext.framebufferTexture2D()
WebGLRenderingContext.framebufferRenderbuffer()
WebGLRenderingContext.readPixels()

缓冲区
WebGLRenderingContext.bindBuffer()
WebGLRenderingContext.bufferData()
WebGLRenderingContext.bufferSubData()
WebGLRenderingContext.createBuffer()

视野和裁剪
WebGLRenderingContext.scissor()
WebGLRenderingContext.viewport()

状态信息
WebGLRenderingContext.activeTexture()			选择要激活的纹理单元。
WebGLRenderingContext.blendColor()				设置源和目标的混和因子。
WebGLRenderingContext.blendEquation()			用同一个表达式设置 RGB 混和表达式和 alpha 混和表达式。
WebGLRenderingContext.blendEquationSeparate()	分开设置 RGB 混和表达式和 alpha 混和表达式。
WebGLRenderingContext.blendFunc()				定义用于像素混合算法的函数。
WebGLRenderingContext.blendFuncSeparate()		分别定义混合像素RGB通道和透明通道的函数。
WebGLRenderingContext.clearColor()				设置用于清空用的颜色。
WebGLRenderingContext.clearDepth()				设置清除深度缓存时的深度值。
WebGLRenderingContext.clearStencil()			设置清除模板缓冲区时的模板值。
WebGLRenderingContext.colorMask()				设置在绘制或渲染WebGLFramebuffer时要开启或关闭的颜色分量。
WebGLRenderingContext.cullFace()				设置多边形的正面和/或反面是否要被排除。
WebGLRenderingContext.depthFunc()				设置比较输入像素深度和深度缓存值得函数。
WebGLRenderingContext.depthMask()				设置是否写入深度缓存。
WebGLRenderingContext.depthRange()				设置从规范化设备坐标映射到窗口或视口坐标时的深度范围。
WebGLRenderingContext.disable()					禁用这个上下文的WebGL功能。
WebGLRenderingContext.enable()					启用这个上下文的WebGL功能。
WebGLRenderingContext.frontFace()				设置多边形的正面使用顺时针还是逆时针绘制表示。
WebGLRenderingContext.getParameter()			返回给入参数名的值。
WebGLRenderingContext.getError()				返回错误信息。
WebGLRenderingContext.hint()					给某些行为设置建议使用的模式。具体建议需要看执行的情况。
WebGLRenderingContext.isEnabled()				测试这个上下文的WebGL功能是否开启。
WebGLRenderingContext.lineWidth()				设置线宽。
WebGLRenderingContext.pixelStorei()				设置像素存储模式。
WebGLRenderingContext.polygonOffset()			设置多边形偏移的比例和单位，从而计算深度值。（补充：解决深度冲突）
WebGLRenderingContext.sampleCoverage()			为抗锯齿效果设置多重取样覆盖参数。
WebGLRenderingContext.stencilFunc()				同时设置前面和背面的模板测试函数，及其引用值。
WebGLRenderingContext.stencilFuncSeparate()		可分开设置前面或背面的模板测试函数，及其引用值。
WebGLRenderingContext.stencilMask()				同时启用或禁用，前面和背面的模板测试掩码。
WebGLRenderingContext.stencilMaskSeparate()		可分开启用或禁用，前面和背面的模板测试掩码。
WebGLRenderingContext.stencilOp()				同时设置，在前面和背面的模板缓冲区上执行的操作。
WebGLRenderingContext.stencilOpSeparate()		可分开设置，在前面和背面的模板缓冲区上执行的操作。