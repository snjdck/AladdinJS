'use strict';

const WebGL = require('./WebGL');
const DisplayObject2D = require('./DisplayObject2D');
const Bitmap3D = require('./2d/Bitmap3D');
const traverseTree = require('utils/traverseTree');

class Scene2D
{
	constructor(width, height){
		this.root = new DisplayObject2D();
		this.root._scene = this;
		this.width = width;
		this.height = height;
	}

	update(){
		//this.root.onUpdate();
		traverseTree.call(null, this.root, onUpdate);
	}

	draw(mode){
		const {render2d, bitmap3DMgr} = WebGL;
		if(!mode){
			bitmap3DMgr.reset();
			traverseTree.call(mode, this.root, onDraw3D);
			bitmap3DMgr.draw();
		}
		render2d.mode = mode;
		render2d.invalidate();
		traverseTree.call(mode, this.root, onDraw);
		render2d.submit();
	}
}

function onUpdate(item){
	if(!item.visible)return true;
	const {onUpdate} = item;
	return onUpdate && onUpdate.apply(item);
}

function onDraw3D(item){
	if(!item.visible)return true;
	if(!(item instanceof Bitmap3D))return;
	const {bitmap3DMgr} = WebGL;
	bitmap3DMgr.register(item);
}

function onDraw(item){
	if(!item.visible)return true;
	const {filter, onDraw} = item;
	if(this){
		if(onDraw)onDraw.call(item, this);
		return;
	}
	if(filter)filter.onDrawBegin(item);
	if(onDraw)onDraw.call(item);
	return filter && filter.onDrawEnd;
}

module.exports = Scene2D;
