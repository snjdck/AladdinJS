
const escape = (function(){
	let dict = {"<":"&lt;", ">":"&gt;", "&":"&amp;"};
	let _replace = v => dict[v];
	let pattern = /[<>&]/g;
	return v => v.replace(pattern, _replace);
})();

const template = ((_eval, pattern, builtin) => function(input){
	input = input.trim();
	let code = [];
	while(input.length > 0){
		let info = pattern.exec(input);
		if(!info){
			code.push(`yield ${JSON.stringify(input)};`);
			break;
		}
		let head = input.slice(0, info.index).trimRight();
		if(head){
			code.push(`yield ${JSON.stringify(head)};`);
		}
		input = input.slice(info.index + info[0].length).trimLeft();
		let text = info[2];
		switch(info[1]){
			case "=": text = `escape(String(${text}))`;
			case "!": text = `yield ${text};`;
		}
		code.push(text);
	}
	let handler = _eval(`(function*(){with(this){${code.join("\n")}}})`);
	return context => Array.from(handler.call(Object.create(context, builtin))).join("");
})(eval, /<%(=|!|)([^]*?)%>/, {escape:{value:escape}});

module.exports = {
	template,
	escape
};