"use strict";

class Signal
{
	constructor(...argTypes){
		Object.defineProperties(this, {
			argTypes:{value:argTypes},
			handlerDict:{value:new Map()}
		});
	}

	add(handler, once=false){
		this.handlerDict.set(handler, once);
	}

	remove(handler){
		this.handlerDict.delete(handler);
	}

	has(handler){
		return this.handlerDict.has(handler);
	}

	notify(...args){
		console.assert(args.length == this.argTypes.length);
		console.assert(this.argTypes.every((type, i) => args[i] == null || args[i] instanceof type))
		for(let [handler, once] of this.handlerDict.entries()){
			handler(...args);
			if(once) this.remove(handler);
		}
	}
}

module.exports = Signal;
