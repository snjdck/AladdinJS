

class MoveType
{
	constructor(target){
		this.target = target;
	}

	move(bullet, timeElapsed){}
}

class MoveTypeNow
{
	constructor(target){
		this.target = target;
	}

	move(bullet, timeElapsed){
		bullet.position = target.position;
	}
}

class MoveTypeCurve
{
	constructor(direction, speed, accY){
		this.speedX = speed * direction.x;
		this.speedY = speed * direction.y;
		this.accY = accY;
	}

	move(bullet, timeElapsed){
		const {direction, speed} = this;
		bullet.position.x += this.speedX * timeElapsed;
		bullet.position.x += this.speedY * timeElapsed;
		this.speedY -= this.accY * timeElapsed;
	}
}

class MoveTypeLine extends MoveTypeCurve
{
	constructor(direction, speed){
		super(direction, speed, 0);
	}
}

class MoveTypeFollow
{
	constructor(target, speed){
		this.target = target;
		this.speed = speed;
	}

	move(bullet, timeElapsed){
		const {target, speed} = this;
		const dx = target.position.x - bullet.position.x;
		const dy = target.position.y - bullet.position.y;
		const length = Math.hypot(dx, dy);
		const speedX = speed * dx / length;
		const speedY = speed * dy / length;
		bullet.position.x += speedX * timeElapsed;
		bullet.position.x += speedY * timeElapsed;
	}
}

exports.MoveTypeNow = MoveTypeNow;
exports.MoveTypeLine = MoveTypeLine;
exports.MoveTypeCurve = MoveTypeCurve;
exports.MoveTypeFollow = MoveTypeFollow;
