
class DestroyCondition
{
	onUpdate(bullet){}
	onHitTarget(bullet, target){}
	onDestroyBullet(bullet){}
}

class DestroyConditionTarget extends DestroyCondition
{
	constructor(target){
		this.target = target;
	}
	onHitTarget(bullet, target){
		return target == this.target;
	}
	onDestroyBullet(bullet){
		bullet.emit('destroy', 'target');
	}
}

class DestroyConditionHitCount extends DestroyCondition
{
	constructor(maxCount){
		this.maxCount = maxCount;
		this.hitCount = 0;
	}
	onHitTarget(bullet, target){
		return ++this.hitCount >= this.maxCount;
	}
	onDestroyBullet(bullet){
		bullet.emit('destroy', 'hit');
	}
}

class DestroyConditionMaxRange extends DestroyCondition
{
	constructor(range){
		this.range = range;
	}
	onUpdate(bullet){
		const {position, firePosition} = bullet;
		const dx = position.x - firePosition.x;
		const dy = position.y - firePosition.y;
		return Math.hypot(dx, dy) > this.range;
	}
	onDestroyBullet(bullet){
		bullet.emit('destroy', 'out_range');
	}
}

class DestroyConditionLiveTime extends DestroyCondition
{
	constructor(maxLife){
		this.maxLife = maxLife;
	}
	onUpdate(bullet){
		return bullet.liveTime > this.maxLife;
	}
	onDestroyBullet(bullet){
		bullet.emit('destroy', 'out_life');
	}
}

exports.DestroyConditionTarget = DestroyConditionTarget;
exports.DestroyConditionHitCount = DestroyConditionHitCount;
exports.DestroyConditionMaxRange = DestroyConditionMaxRange;
exports.DestroyConditionLiveTime = DestroyConditionLiveTime;
