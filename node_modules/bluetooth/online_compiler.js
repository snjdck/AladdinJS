'use strict';

const TaskQueueFactory = require('utils/task');
const {bodyParser} = require('net/HttpServer');

const compile = require('arduino_vm/arduino_compiler');

const maxTaskCount = 10;

const parseHEX = data => Buffer.from(Array.from(data.trim()
	.split(/\s+/)
	.map(line => line.slice(9, -2))
	.join('')
	.match(/\w{2}/g),
	v => parseInt(v, 16)
));

function respond404(response){
	response.statusCode = 404;
	response.end();
}

const enqueue = TaskQueueFactory(async([code, response])=>{
	try{
		const hex_data = compile(code, avr_root, [], []);
		const bin_data = parseHEX(hex_data.toString());
		response.setHeader('Access-Control-Allow-Origin', '*');
		response.setHeader('Content-Length', bin_data.length);
		response.end(bin_data);
	}catch(error){
		respond404(response);
	}
}, maxTaskCount);

module.exports = bodyParser.raw((request, response) => enqueue([request.body, response]));
