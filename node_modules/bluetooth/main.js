'use strict';

const startBlockName = 'when_start';
const startBlockLabel = '当点击开始';

Blockly.Extensions.register('markAsyncFunc', function(){
	this.data = 'isAsyncFunc';
});

Blockly.Extensions.register('markStatement', function(){
	this.setPreviousStatement(true, null);
	this.setNextStatement(true, null);
});

Blockly.Extensions.register('colour_robots', function(){
	this.setColour(15);
});

Blockly.defineBlocksWithJsonArray([
	{
		"type": startBlockName,
		"message0": startBlockLabel,
		"nextStatement": null,
		"colour": 330
	},{
		"type": "sensor_port",
		"message0": "%1",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				["PORT A","PORT_A"],
				["PORT B","PORT_B"],
				["PORT C","PORT_C"],
				["PORT D","PORT_D"]
			]}
		],
		"output": "SENSOR_PORT",
		"extensions": ["colour_robots"]
	},{
		"type": "board_port",
		"message0": "%1",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				["PIN 1","PORT_1"],
				["PIN 2","PORT_2"],
				["PIN 3","PORT_3"],
				["PIN 4","PORT_4"],
				["PIN 5","PORT_5"],
				["PIN 6","PORT_6"]
			]}
		],
		"output": "BOARD_PORT",
		"extensions": ["colour_robots"]
	},{
		"type": "ir_code",
		"message0": "红外按键 %1",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				["A", '69'],
				["B", '70'],
				["C", '71'],
				["D", '68'],
				["E", '67'],
				["F", '13'],
				["↑", '64'],
				["↓", '25'],
				["←", '7'],
				["→", '9'],
				["OK",'21'],
				["R0",'22'],
				["R1",'12'],
				["R2",'24'],
				["R3",'94'],
				["R4",'8'],
				["R5",'28'],
				["R6",'90'],
				["R7",'66'],
				["R8",'82'],
				["R9",'74']
			]}
		],
		"output": "Number",
		"extensions": ["colour_robots"]
	},{
		"type": "buzzer_note",
		"message0": "音调 %1",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				["B0", "31"],["C1", "33"],["D1", "37"],["E1", "41"],["F1", "44"],["G1", "49"],["A1", "55"],["B1", "62"],
				["C2", "65"],["D2", "73"],["E2", "82"],["F2", "87"],["G2", "98"],["A2", "110"],["B2", "123"],
				["C3", "131"],["D3", "147"],["E3", "165"],["F3", "175"],["G3", "196"],["A3", "220"],["B3", "247"],
				["C4", "262"],["D4", "294"],["E4", "330"],["F4", "349"],["G4", "392"],["A4", "440"],["B4", "494"],
				["C5", "523"],["D5", "587"],["E5", "659"],["F5", "698"],["G5", "784"],["A5", "880"],["B5", "988"],
				["C6", "1047"],["D6", "1175"],["E6", "1319"],["F6", "1397"],["G6", "1568"],["A6", "1760"],["B6", "1976"],
				["C7", "2093"],["D7", "2349"],["E7", "2637"],["F7", "2794"],["G7", "3136"],["A7", "3520"],["B7", "3951"],
				["C8", "4186"],["D8", "4699"]
			]}
		],
		"output": "Number",
		"extensions": ["colour_robots"]
	},{
		"type": "buzzer_beat",
		"message0": "%1 拍",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				['二分之一',"500"],
				['四分之一',"250"],
				['百分之一',"125"],
				['一',"1000"],
				['两',"2000"]
			]}
		],
		"output": "Number",
		"extensions": ["colour_robots"]
	},{
		"type": "weeemake_weeebot_board_rgb",
		"message0": "设置板载RGB %1",
		"args0": [
			{"type": "input_value", "name": "COLOR", "check": "Colour"}
		],
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_weeebot_board_button",
		"message0": "板载按钮按下?",
		"args0": [],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeebot_pin_light",
		"message0": "板载光线传感器 %1",
		"args0": [
			{"type": "input_value", "name": "BOARD_PORT", "check": "BOARD_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeebot_pin_sound",
		"message0": "板载声音传感器 %1",
		"args0": [
			{"type": "input_value", "name": "BOARD_PORT", "check": "BOARD_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "RJ11_light",
		"message0": "外接光线传感器 %1",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "RJ11_sound",
		"message0": "外接声音传感器 %1",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_single_led",
		"message0": "设置单色LED %1 打开? %2",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_weeebot_pin_ir",
		"message0": "红外 %1 接收到 %2",
		"args0": [
			{"type": "input_value", "name": "BOARD_PORT", "check": "BOARD_PORT"},
			{"type": "input_value", "name": "IR_CODE", "check": "Number"}
		],
		"output": "Boolean",
		"inputsInline": true,
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "control_wait",
		"message0": "等待 %1 秒",
		"args0": [
			{"type": "input_value", "name": "VALUE", "check": "Number"}
		],
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_buzzer",
		"message0": "蜂鸣器响 %1 %2",
		"args0": [
			{"type": "input_value", "name": "NOTE", "check": "Number"},
			{"type": "input_value", "name": "BEAT", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_dc_motor",
		"message0": "%{BKY_WB_DCMOTOR}",
		"args0": [
			{"type": "input_value", "name": "DC_MOTOR_INDEX", "check": "Number"},
			{"type": "input_value", "name": "SPEED", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_robot_move",
		"message0": "%{BKY_WB_MOTOR_MOVE}",
		"args0": [
			{"type": "field_dropdown", "name": "MOVE_DIRECTION", "options":[
				['%{BKY_WB_Forward}', '1'],
				['%{BKY_WB_Backward}', '2'],
				['%{BKY_WB_Left}', '3'],
				['%{BKY_WB_Right}', '4']
			]},
			{"type": "input_value", "name": "SPEED", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_vehicle_move",
		"message0": "%{BKY_WM_VEHICLE_MOVE}",
		"args0": [
			{"type": "input_value", "name": "LSPEED", "check": "Number"},
			{"type": "input_value", "name": "RSPEED", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_robot_stop",
		"message0": "%{BKY_WB_STOP_MOTOR}",
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_dc_130_motor",
		"message0": "5V 130 %{BKY_WB_DCMOTOR}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "SPEED", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "dc_motor_index",
		"message0": "M %1",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				['1', '1'],
				['2', '2'],
				['3', '3'],
				['4', '4'],
				['5', '5'],
				['6', '6'],
				['7', '7'],
				['8', '8'],
				['9', '9'],
				['10', '10']
			]}
		],
		"output": "Number",
		"extensions": ["colour_robots"]
	},{
		"type": "motor_speed",
		"message0": "%1",
		"args0": [
			{"type": "field_number", "name": "VALUE",
			"value": 100,
			"min": -255,
			"max": 255,
			"precision": 1}
		],
		"output": "Number",
		"extensions": ["colour_robots"]
	},{
		"type": "weeemake_led_matrix_number",
		"message0": "%{BKY_WB_LED_MATRIX_NUMBER}",
		"args0": [
			{"type": "field_dropdown",
			"name": "LED_MATRIX_TYPE",
			"options": [["7x21", "7x21" ],["5x14", "5x14" ]]
			},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "NUM", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_led_matrix_time",
		"message0": "%{BKY_WB_LED_MATRIX_TIME}",
		"args0": [
			{"type": "field_dropdown",
			"name": "LED_MATRIX_TYPE",
			"options": [["7x21", "7x21" ],["5x14", "5x14" ]]
			},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "HOUR", "check": "Number"},
			{"type": "input_value", "name": "SHOW_COLON", "check": "Boolean"},
			{"type": "input_value", "name": "MINUTE", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_led_matrix_string",
		"message0": "%{BKY_WB_LED_MATRIX_STRING}",
		"args0": [
			{"type": "field_dropdown",
			"name": "LED_MATRIX_TYPE",
			"options": [["7x21", "7x21" ],["5x14", "5x14" ]]
			},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "X", "check": "Number"},
			{"type": "input_value", "name": "Y", "check": "Number"},
			{"type": "input_value", "name": "STR", "check": "String"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_led_matrix_pixel",
		"message0": "%{BKY_WB_LED_MATRIX_PIXEL}",
		"args0": [
			{"type": "field_dropdown",
			"name": "LED_MATRIX_TYPE",
			"options": [["7x21", "7x21" ],["5x14", "5x14" ]]
			},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "X", "check": "Number"},
			{"type": "input_value", "name": "Y", "check": "Number"},
			{"type": "input_value", "name": "SHOW_HIDE", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_led_matrix_clear",
		"message0": "%{BKY_WB_LED_MATRIX_CLEAR}",
		"args0": [
			{"type": "field_dropdown",
			"name": "LED_MATRIX_TYPE",
			"options": [["7x21", "7x21" ],["5x14", "5x14" ]]
			},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_led_matrix_bitmap",
		"message0": "%{BKY_WB_LED_MATRIX_BITMAP}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "X", "check": "Number"},
			{"type": "input_value", "name": "Y", "check": "Number"},
			{"type": "input_value", "name": "MATRIX", "check": ["MATRIX@21*7", "MATRIX@14*5"]}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "matrix@21*7",
		"message0": "%1",
		"args0": [{
			"type": "field_matrix",
			"name": "MATRIX",
			"width": 21,
			"height": 7
		}],
		"output": "MATRIX@21*7",
		"extensions": ["colour_robots"]
	},{
		"type": "matrix@14*5",
		"message0": "%1",
		"args0": [{
			"type": "field_matrix",
			"name": "MATRIX",
			"width": 14,
			"height": 5
		}],
		"output": "MATRIX@14*5",
		"extensions": ["colour_robots"]
	},{
		"type": "led_index",
		"message0": "%1",
		"args0": [
			{"type": "field_dropdown", "name": "VALUE", "options":[
				//[Blockly.Msg.WB_Both,  '3'],
			//	[Blockly.Msg.WB_Left,  '2'],
				//[Blockly.Msg.WB_Right, '1']
				['%{BKY_WB_Both}',  '3'],
				['%{BKY_WB_Left}',  '2'],
				['%{BKY_WB_Right}', '1']
			]}
		],
		"output": "Number",
		"extensions": ["colour_robots"]
	},{
		"type": "weeemake_ir_avoid",
		"message0": "%{BKY_WB_IR_AVOID}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_ir_avoid_led",
		"message0": "%{BKY_WB_IR_AVOID_LED}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ULTRASONIC_LED_INDEX", "check": "Number"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_ir_avoid_rgb",
		"message0": "%{BKY_WB_IR_AVOID_RGB}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ULTRASONIC_LED_INDEX", "check": "Number"},
			{"type": "input_value", "name": "COLOR", "check": "Colour"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_ultrasonic",
		"message0": "%{BKY_WB_ULTRASONIC}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_ultrasonic_led",
		"message0": "%{BKY_WB_ULTRASONIC_LED}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ULTRASONIC_LED_INDEX", "check": "Number"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_ultrasonic_rgb",
		"message0": "%{BKY_WB_ULTRASONIC_RGB}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ULTRASONIC_LED_INDEX", "check": "Number"},
			{"type": "input_value", "name": "COLOR", "check": "Colour"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_rgb_strip",
		"message0": "%{BKY_WB_RGB_STRIP}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "PIXEL", "check": "Number"},
			{"type": "input_value", "name": "COLOR", "check": "Colour"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_rgb_RJ11",
		"message0": "%{BKY_WB_RGB1}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "INDEX", "check": "Number"},
			{"type": "input_value", "name": "COLOR", "check": "Colour"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_line_follower",
		"message0": "%{BKY_WB_LINE_FOLLOWER}",
		"args0": [
			{"type": "field_dropdown", "name": "LINE_FOLLOWER_INDEX", "options":[
				['S1', '1'],
				['S2', '2']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_humiture",
		"message0": "%{BKY_WB_HUMITURE}",
		"args0": [
			{"type": "field_dropdown", "name": "HUMITURE_TYPE", "options":[
				['%{BKY_WB_HUMITURE_HUMIDITY}', '0'],
				['%{BKY_WB_HUMITURE_TEMPERATURE}', '1']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_seven_segment",
		"message0": "%{BKY_WB_7_SEGMENT_DISPLAY}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "NUM", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_potentiometer",
		"message0": "%{BKY_WB_POTENTIOMETER}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_gas_sensor",
		"message0": "%{BKY_WB_GAS}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_relay",
		"message0": "%{BKY_WB_RELAY}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_water_atomizer",
		"message0": "%{BKY_WB_WATER_ATOMIZER}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_mp3_do",
		"message0": "%{BKY_WB_MP3_DO}",
		"args0": [
			{"type": "field_dropdown", "name": "MP3_FUNCTION", "options":[
				["%{BKY_PLAY}", '0'],
				["%{BKY_PAUSE}", '1'],
				["%{BKY_PREV_MUSIC}", '2'],
				["%{BKY_NEXT_MUSIC}", '3'],
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_mp3_set_music",
		"message0": "%{BKY_WB_MP3_SET_MUSIC}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "NUM", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_mp3_set_volume",
		"message0": "%{BKY_WB_MP3_SET_VOLUME}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "NUM", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_mp3_set_device",
		"message0": "%{BKY_WB_MP3_SET_DEVICE}",
		"args0": [
			{"type": "field_dropdown", "name": "MP3_DEVICE_TYPE", "options":[
				["FLASH", '4'],
				["TF", '2']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_mp3_is_over",
		"message0": "%{BKY_WB_MP3_IS_OVER}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_color_sensor",
		"message0": "%{BKY_WB_COLOR_SENSOR}",
		"args0": [
			{"type": "field_dropdown", "name": "COLOR_TYPE", "options":[
				['%{BKY_COLOUR_LIGHT}', '0'],
				['%{BKY_COLOUR_RGB_RED}',  '1'],
				['%{BKY_COLOUR_RGB_GREEN}','2'],
				['%{BKY_COLOUR_RGB_BLUE}', '3']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_color_sensor_white_balance",
		"message0": "%{BKY_WB_COLOR_SENSOR_WHITE_BALANCE}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_color_sensor_light",
		"message0": "%{BKY_WB_COLOR_SENSOR_LIGHT}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_flame_sensor",
		"message0": "%{BKY_WB_FLAME_SENSOR}",
		"args0": [
			{"type": "field_dropdown", "name": "FLAME_INDEX", "options":[
				['1','1'],
				['2','2'],
				['3','3']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_joystick",
		"message0": "%{BKY_WB_JOYSTICK}",
		"args0": [
			{"type": "field_dropdown", "name": "AXIS2", "options":[
				['%{BKY_X_AXIS}', '0'],
				['%{BKY_Y_AXIS}', '1']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_compass",
		"message0": "%{BKY_WB_COMPASS}",
		"args0": [
			{"type": "field_dropdown", "name": "AXIS3", "options":[
				['%{BKY_X_AXIS}', '0'],
				['%{BKY_Y_AXIS}', '1'],
				['%{BKY_Z_AXIS}', '2']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_gyro",
		"message0": "%{BKY_WM_GYRO}",
		"args0": [
			{"type": "field_dropdown", "name": "GYRO_VALUE_TYPE", "options":[
				['%{BKY_GYRATION}', '0'],
				["%{BKY_ACCELERATION}", '1']
			]},
			{"type": "field_dropdown", "name": "AXIS3", "options":[
				['%{BKY_X_AXIS}', '0'],
				['%{BKY_Y_AXIS}', '1'],
				['%{BKY_Z_AXIS}', '2']
			]},
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_touch",
		"message0": "%{BKY_WB_TOUCH}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_led_button",
		"message0": "%{BKY_WB_LED_BUTTON}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "field_dropdown", "name": "BUTTON_INDEX", "options":[
				['1','1'],
				['2','2'],
				['3','3'],
				['4','4']
			]}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_led_button_light",
		"message0": "%{BKY_WB_LED_BUTTON_LIGHT}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "field_dropdown", "name": "BUTTON_INDEX", "options":[
				['1','1'],
				['2','2'],
				['3','3'],
				['4','4']
			]},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_pir",
		"message0": "%{BKY_WB_PIR}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_tilt",
		"message0": "%{BKY_WB_TILT}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "field_dropdown", "name": "TILT_DIR", "options":[
				['%{BKY_WM_NO_TILT}',  '0'],
				['%{BKY_WB_RIGHT}', '1'],
				['%{BKY_WB_Left}', '2'],
			]}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_limit_switch",
		"message0": "%{BKY_WB_LIMIT_SWITCH}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Boolean",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_temperature",
		"message0": "%{BKY_WB_TEMPERATURE}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_soil",
		"message0": "%{BKY_WB_SOIL}",
		"args0": [
			{"type": "input_value", "name": "BOARD_PORT", "check": "BOARD_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_single_line_follower",
		"message0": "%{BKY_WB_SINGLE_LINE_FOLLOWER}",
		"args0": [
			{"type": "input_value", "name": "BOARD_PORT", "check": "BOARD_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_led_single_line_follower",
		"message0": "%{BKY_WM_LED_SINGLE_LINE_FOLLOWER}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"}
		],
		"output": "Number",
		"extensions": ["colour_robots", "markAsyncFunc"]
	},{
		"type": "weeemake_led_single_line_follower_led",
		"message0": "%{BKY_WM_LED_SINGLE_LINE_FOLLOWER_LED}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ON_OFF", "check": "Boolean"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_servo",
		"message0": "%{BKY_WB_BOARD_SERVO}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ANGLE", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	},{
		"type": "weeemake_servo_360",
		"message0": "360° %{BKY_WB_BOARD_SERVO}",
		"args0": [
			{"type": "input_value", "name": "SENSOR_PORT", "check": "SENSOR_PORT"},
			{"type": "input_value", "name": "ANGLE", "check": "Number"}
		],
		"inputsInline": true,
		"extensions": ["colour_robots", "markStatement", "markAsyncFunc"]
	}
]);


const defaultXml = `<xml xmlns="https://developers.google.com/blockly/xml"><block type="${startBlockName}" editable="false" deletable="false" movable="false"></block></xml>`;

Blockly.BlockSvg.START_HAT = true;
const workspace = Blockly.inject('blocklyDiv', {
	media: 'media/',
	toolbox: document.getElementById('toolbox'),
	grid: {
		spacing: 20,
		length: 3,
		colour: '#ccc',
		snap: true
	}
});

Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(defaultXml), workspace);

workspace.addChangeListener(Blockly.Events.disableOrphans);
//workspace.addChangeListener(evt => console.log('changed'));

const toJSON = require('../fileformats/xml/toJSON.js');
const js_engine = require('../blockly/js_engine.js');

const runBtn = document.getElementById('runBtn');
const mask = document.getElementById('mask');

const context = function(){
	const primitives = require('op/Primitives2.js');
	const varDict = Object.create(null);
	const context = {
	text({TEXT}){
		return TEXT || '';
	},
	math_number({NUM}){
		let v = Number(NUM);
		return isNaN(v) ? NUM : v;
	},
	math_arithmetic({OP, A, B}){
		if(OP == 'ADD')return A + B;
		if(OP == 'MINUS')return A - B;
		if(OP == 'MULTIPLY')return A * B;
		if(OP == 'DIVIDE')return A / B;
		if(OP == 'POWER')return A ** B;
	},
	math_single({OP, NUM}){
		if(OP == 'ROOT')return Math.sqrt(NUM);
		if(OP == 'ABS')return Math.abs(NUM);
		if(OP == 'NEG')return -NUM;
		if(OP == 'LN')return Math.log(NUM);
		if(OP == 'LOG10')return Math.log10(NUM);
		if(OP == 'EXP')return Math.exp(NUM);
		if(OP == 'POW10')return 10 ** NUM;
	},
	math_trig({OP, NUM}){
		if(OP == 'SIN')return Math.sin(NUM);
		if(OP == 'COS')return Math.cos(NUM);
		if(OP == 'TAN')return Math.tan(NUM);
		if(OP == 'ASIN')return Math.asin(NUM);
		if(OP == 'ACOS')return Math.acos(NUM);
		if(OP == 'ATAN')return Math.atan(NUM);
	},
	math_constant({CONSTANT}){
		if(CONSTANT == 'PI')return Math.PI;
		if(CONSTANT == 'E')return Math.E;
		if(CONSTANT == 'GOLDEN_RATIO')return 2 / (Math.sqrt(5) - 1);
		if(CONSTANT == 'SQRT2')return Math.SQRT2;
		if(CONSTANT == 'SQRT1_2')return Math.SQRT1_2;
		if(CONSTANT == 'INFINITY')return Infinity;
	},
	math_number_property({PROPERTY, NUMBER_TO_CHECK, DIVISOR}){
		if(PROPERTY == 'EVEN')return NUMBER_TO_CHECK % 2 == 0;
		if(PROPERTY == 'ODD')return NUMBER_TO_CHECK % 2 == 1;
		if(PROPERTY == 'WHOLE')return Number.isInteger(NUMBER_TO_CHECK);
		if(PROPERTY == 'POSITIVE')return NUMBER_TO_CHECK > 0;
		if(PROPERTY == 'NEGATIVE')return NUMBER_TO_CHECK < 0;
		if(PROPERTY == 'DIVISIBLE_BY')return NUMBER_TO_CHECK % DIVISOR == 0;
		if(PROPERTY == 'PRIME'){
			for(let i=2, n=NUMBER_TO_CHECK>>1; i<n; ++i){
				if(NUMBER_TO_CHECK % i == 0)return false;
			}
			return true;
		}
	},
	math_round({OP, NUM}){
		if(OP == 'ROUND')return Math.round(NUM);
		if(OP == 'ROUNDUP')return Math.ceil(NUM);
		if(OP == 'ROUNDDOWN')return Math.floor(NUM);
	},
	math_on_list({OP, LIST}){
		if(OP == 'MIN')return Math.min.apply(null, LIST);
		//not finish
	},
	math_modulo({DIVIDEND, DIVISOR}){
		return DIVIDEND % DIVISOR;
	},
	math_constrain({VALUE, LOW, HIGH}){
		return Math.min(Math.max(VALUE, LOW), HIGH);
	},
	math_random_int({FROM, TO}){
		if(FROM > TO){
			let t = FROM;
			FROM = TO;
			TO = t;
		}
		return Math.floor(Math.random() * (TO - FROM + 1) + FROM);
	},
	math_random_float(){
		return Math.random();
	},
	math_atan2({X, Y}){
		return Math.atan2(Y, X);
	},
	text_length({VALUE}){
		return VALUE ? VALUE.length : 0;
	},
	text_print({TEXT}){
		console.log(TEXT);
	},
	text_join(args){
		let keys = Object.keys(args).sort();
		return keys.map(k => args[k]).join('');
	},
	text_append({VAR, TEXT}){
		console.log('text_append', VAR, TEXT)
	},
	text_isEmpty({VALUE}){
		return VALUE.length == 0;
	},
	lists_create_empty(){
		return [];
	},
	lists_create_with(args){
		let keys = Object.keys(args).sort();
		return keys.map(k => args[k]);
	},
	colour_picker({COLOUR}){
		return parseInt(COLOUR.slice(1), 16);
	},
	colour_random(){
		return Math.floor(Math.random() * 0x1000000);
	},
	colour_rgb({RED, GREEN, BLUE}){
		let r = 2.55 * Math.max(0, Math.min(100, RED));
		let g = 2.55 * Math.max(0, Math.min(100, GREEN));
		let b = 2.55 * Math.max(0, Math.min(100, BLUE));
		return r << 16 | g << 8 | b;
	},
	colour_blend({COLOUR1, COLOUR2, RATIO}){
		let ratio = Math.max(Math.min(RATIO, 1), 0);
		let r = Math.round((COLOUR1 >> 16 & 0xFF) * (1 - ratio) + (COLOUR2 >> 16 & 0xFF) * ratio);
		let g = Math.round((COLOUR1 >>  8 & 0xFF) * (1 - ratio) + (COLOUR2 >>  8 & 0xFF) * ratio);
		let b = Math.round((COLOUR1 & 0xFF) * (1 - ratio) + (COLOUR2 & 0xFF) * ratio);
		return r << 16 | g << 8 | b;
	},
	variables_get({VAR}){
		if(VAR in varDict){
			return varDict[VAR];
		}
	},
	variables_set({VAR, VALUE}){
		varDict[VAR] = VALUE;
	},
	math_change({VAR, DELTA}){
		if(VAR in varDict){
			varDict[VAR] = Number(varDict[VAR]) + DELTA;
		}else{
			varDict[VAR] = DELTA;
		}
	},
	logic_boolean({BOOL}){
		return BOOL === 'TRUE';
	},
	logic_negate({BOOL}){
		return !BOOL;
	},
	logic_null(){
		return null;
	},
	logic_compare({OP, A, B}){
		if(OP == 'EQ')return A == B;
		if(OP == 'LT')return A < B;
		if(OP == 'GT')return A > B;
		if(OP == 'NEQ')return A != B;
		if(OP == 'LTE')return A <= B;
		if(OP == 'GTE')return A >= B;
	},
	logic_operation({OP, A, B}){
		if(OP == 'AND')return A && B;
		if(OP == 'OR')return A || B;
	},
	/*buzzer({NOTE, BEAT}){
		return console.log(NOTE, BEAT)
		return window.sendBLEData(`BZ ${NOTE} ${BEAT}`);
	},*/
	buzzer_note({VALUE}){
		return Number(VALUE);
	},
	buzzer_beat({VALUE}){
		return Number(VALUE);
	}
}
return Object.assign({net:{sendData(buffer){
	return window.sendBLERawData(buffer.buffer);
}}}, context, primitives);
}();

function onExecFinish(){
	js_engine.stop();
	mask.style.display = 'none';
}

mask.onclick = onExecFinish;
runBtn.onclick = async function(){
	await connectBLE();
	//let workspace = Blockly.getMainWorkspace();
	let json = toJSON(Blockly.Xml.workspaceToDom(workspace));
	console.log(json);
	js_engine.exec(json.block, startBlockName, context);
	js_engine.onfinish = onExecFinish;
	mask.style.display = 'block';
}


