
exports.blocks = require('./blocks.json');
exports.toolbox = require('./toolbox.json');

exports.context = function(){
	const pinList = [null, [10, 9], [5, 6]];
	return {
		elf_mini_mpin: ({value}) => `mini:${value}:${pinList[value]}`,
		elf_mini_buzzer_pin: () => 7,
	};
}();

exports.arduino = function(){
	const pinMap = {19:'PORT_A', 18:'PORT_B', 16:'PORT_C', 15:'PORT_D', 4:'MINI_LEFT_YELLOW', 3:'MINI_LEFT_RED', 14:'MINI_RIGHT_RED', 13:'MINI_RIGHT_YELLOW'};
	const portFn = fn => function(block, {value}){
		this.addInclude('#include<WeELFMini.h>');
		return [fn(value), this.ORDER_ATOMIC];
	};
	const pinFn = key => portFn(() => key);
	return {
		elf_mini_port: portFn(v => pinMap[v]),
		elf_mini_mpin: portFn(v => 'M' + v),
		elf_mini_buzzer_pin: pinFn('OnBoard_Buzzer'),
		elf_mini_light_pin: pinFn('OnBoard_Light'),
		elf_mini_sound_pin: pinFn('OnBoard_Sound'),
		elf_mini_ir_pin: pinFn('OnBoard_IR'),
		elf_mini_back_led(block, {pin, value}){
			pin = pinMap[pin];
			this.addInclude('#include<WeELFMini.h>');
			this.addSetupCode(`pinMode(${pin}, OUTPUT)`);
			return `digitalWrite(${pin}, ${value})` + this.END;
		},
	};
}();
