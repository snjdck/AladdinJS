
exports.blocks = require('./blocks.json');
exports.toolbox = require('./toolbox.json');

exports.context = function(){
	const pinList = [null, [6, 7], [5, 8], [19,1], [19, 2], [18,1], [18, 2], [17,1], [17, 2], [16,1], [16, 2]];
	return {
		elf_328p_mpin: ({value}) => `328p:${value}:${pinList[value]}`,
		elf_328p_buzzer_pin: () => 11,
		elf_328p_rgb_pin: () => 3,
		elf_328p_rgb_ring_pin: () => 13,
		elf_328p_button_pin: () => 2,
		elf_328p_port: ({value}) => parseInt(value),
	};
}();

exports.arduino = function(){
	const pinMap = {9:'PORT_A', 10:'PORT_B', 12:'PORT_C', 4:'PORT_D', 14:'PORT_1', 15:'PORT_2', 19:'PORT_3', 18:'PORT_4', 17:'PORT_5', 16:'PORT_6'};
	const portFn = fn => function(block, {value}){
		this.addInclude('#include<WeELF328P.h>');
		return [fn(value), this.ORDER_ATOMIC];
	};
	const pinFn = key => portFn(() => key);
	return {
		elf_328p_port: portFn(v => pinMap[v]),
		elf_328p_mpin: portFn(v => 'M' + v),
		elf_328p_empin: 'elf_328p_port',
		elf_328p_buzzer_pin: pinFn('OnBoard_Buzzer'),
		elf_328p_rgb_pin: pinFn('OnBoard_RGB'),
		elf_328p_rgb_ring_pin: pinFn('PORT_0'),
		elf_328p_button_pin: pinFn('OnBoard_Button'),
	};
}();