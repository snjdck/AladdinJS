'use strict';

const moduleDict = Object.create(null);
const pathStack = [location.href];
const currPath = () => pathStack[pathStack.length-1];

function require(path){
	path = calcPath(path);
	if(path in moduleDict)return moduleDict[path];
	let request = new XMLHttpRequest();
	request.open('GET', path, false);
	request.send();
	const body = request.response;

	const module = {exports:{}};
	pathStack.push(path);
	Function('module', 'exports', body)(module, module.exports);
	pathStack.pop();
	return moduleDict[path] = module.exports;
}

function calcPath(path){
	let file = pop(currPath());
	for(let name of path.split('/')){
		if(name == '.')continue;
		if(name == '..'){
			file = pop(file);
		}else{
			file += '/' + name;
		}
	}
	return file;
}

function pop(path, n=1){
	let [head, tail] = path.split('://');
	tail = tail.split('/');
	while(n-- > 0){
		if(tail.length <= 1)break;
		tail.pop();
	}		
	return head + '://' + tail.join('/');
}
