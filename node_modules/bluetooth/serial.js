'use strict';

const {requestPort, setResetSignal} = require('../webonly/serial');
const {listenReadableStream, writeWritableStream} = require('../net/packet');
const {checkerFactory, upload} = require('./uno');
const replyFnFactory = require('./firmware');

const concatFn = (value, buffer) => {
	buffer.push(...value);
	if(buffer[0] == 0)buffer.shift();//delete bluetooth extra byte
}
const composeFn = checkerFactory(concatFn);
const replyFn = replyFnFactory(concatFn);

async function connectBLE(){
	const {serial} = navigator;
	if(!serial){
		console.warn('no serial');
		return;
	}
	serial.ondisconnect = evt => console.log('disconnect', evt.port);
	const port = await requestPort({filters:[{usbVendorId:0x1A86,usbProductId:0x7523}]});
	if(!port)return;//user not select
	await port.open({baudrate: 115200});

	window.sendBLERawData = function(v){
		writeWritableStream(port.writable, new Uint8Array(v));
		return listenReadableStream(port.readable, replyFn([]));
	}
	
	function sendFn(array, recvCount=0){
		writeWritableStream(port.writable, new Uint8Array(array));
		return listenReadableStream(port.readable, composeFn([], recvCount));
	}

	const resetFn = () => setResetSignal(port);

	window.resetBLE = function(data, stepFn, progressFn){
		return upload(
			new Uint8Array(data),
			resetFn,
			sendFn,
			progressFn,
			stepFn
		);
	}
}

exports.connectBLE = connectBLE;
