'use strict';

Blockly.fieldRegistry.register('field_range', class extends Blockly.FieldNumber {
	static fromJson(options){
		return new this(options['value'], options);
	}

	constructor(opt_value, opt_config){
		super(opt_value, null, null, null, null, opt_config);
		this._datalistID = 'tickmarks';
	}

	configure_(config){
		super.configure_({min: 0, max: 100, precision: 1, ...config});
		this.spellcheck_ = false;
		this._step = config.step ?? 1;
		this._width = config.width ?? 200;
		this._markers = config.markers ?? [];
	}

	widgetCreate_(){
		const htmlInput = super.widgetCreate_();
		this._initInput(htmlInput, 'number');
		return htmlInput;
	}

	updateSize_(){
		super.updateSize_(16);
	}

	onHtmlInputChange_(evt){
		super.onHtmlInputChange_(evt);
		this._rangeInput.value = evt.target.value;
	}

	showInlineEditor_(quietInput){
		super.showInlineEditor_(quietInput);
		const dropDownDiv = Blockly.DropDownDiv;
		dropDownDiv.hideWithoutAnimation();
		dropDownDiv.clearContent();
		const root = dropDownDiv.getContentDiv();

		const range = document.createElement('input');
		range.style.width = this._width + 'px';
		this._initInput(range, 'range');
		range.setAttribute('value', this.getValue());
		range.addEventListener('input', evt => this.setEditorValue_(evt.target.value));
		range.setAttribute('list', this._datalistID);

		root.appendChild(this._createDatalist(this._markers, this._datalistID));
		root.appendChild(range);

		const block = this.getSourceBlock();
		dropDownDiv.setColour(block.getColour(), block.getColourTertiary());
		dropDownDiv.showPositionedByField(this);

		this._rangeInput = range;
	}

	_initInput(input, type){
		input.setAttribute('type', type);
		input.setAttribute('min', this.min_);
		input.setAttribute('max', this.max_);
		input.setAttribute('step', this._step);
	}

	_createDatalist(data, id){
		const datalist = document.createElement('datalist');
		datalist.setAttribute('id', id);
		for(let i of data){
			let option = document.createElement('option');
			option.setAttribute('value', i);
			datalist.appendChild(option);
		}
		return datalist;
	}
});

