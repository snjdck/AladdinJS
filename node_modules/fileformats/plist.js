"use strict"

const {decode:XML} = require("./xml");

function trim(element){
	for(let node of Array.from(element.childNodes)){
		switch(node.nodeType){
			case Node.DOCUMENT_TYPE_NODE:
				element.removeChild(node);
				continue;
			case Node.TEXT_NODE:
				break;
			default:
				trim(node);
				continue;
		}
		if(node.nodeValue.trim().length > 0){
			continue;
		}
		element.removeChild(node);
	}
}

function decode(source){
	let xml = XML(source);
	trim(xml);
	return read(xml.childNodes[0].childNodes[0]);
}

function read(element){
	switch(element.nodeName){
		case "string": 	return element.textContent;
		case "dict": 	return readDict(element);
		case "array": 	return readArray(element);
		case "true": 	return true;
		case "false": 	return false;
		case "integer": return parseInt(element.textContent);
		case "real": 	return parseFloat(element.textContent);
		default:
			throw element;
	}
}

function readDict({childNodes}){
	let result = {};
	for(let i=0, n=childNodes.length; i<n; i+=2){
		let key = childNodes[i].textContent;
		result[key] = read(childNodes[i+1]);
	}
	return result;
}

function readArray({childNodes}){
	return Array.from(childNodes, read);
}

exports.decode = decode;