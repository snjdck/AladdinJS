"use strict"

const parser = new DOMParser();
const XML = v => parser.parseFromString(v, "application/xml");
const zip = require("./zip");

function decode(ba){
	let fileDict = zip.decode(ba);
	let fileList = calcFileList(XML(fileDict["xl/workbook.xml"]));
	let stringList = calcStringList(XML(fileDict["xl/sharedStrings.xml"]));
	let excel = {};
	for(let [index, name] of fileList){
		excel[name] = decodeTable(XML(fileDict[`xl/worksheets/sheet${index}.xml`]), stringList);
	}
	return excel;
}

function calcFileList(workbook){
	return Array.from(workbook.getElementsByTagName("sheet"))
	.map(sheet => [sheet.getAttribute("sheetId"), sheet.getAttribute("name")]);
}

function calcStringList(sharedStrings){
	return Array.from(sharedStrings.getElementsByTagName("si"))
	.map(si => Array.from(si.getElementsByTagName("t")).map(v => v.textContent).join(""));
}

function decodeTable(table, stringList){
	return Array.from(table.getElementsByTagName("row"))
	.map(row => {
		let list = [];
		for(let c of row.getElementsByTagName("c")){
			let value = Array.from(c.getElementsByTagName("v")).map(v => v.textContent).join("");
			if(!value)continue;
			let index = c.getAttribute("r")
						 .replace(/\d/g, "")
						 .split("")
						 .map(v => v.charCodeAt() - 64)
						 .reduce((a, b) => a * 26 + b);
			list[index-1] = c.getAttribute("t") == "s" ? stringList[value] : value;
		}
		return list;
	}).filter(v => v.length > 0);
}

exports.decode = decode;