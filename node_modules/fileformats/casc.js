'use strict';
const zlib = require('zlib');
//casc mpq
/*
if(data[0] == 0xff && data[1] == 0xd8 && data[data.length-2] == 0xff && data[data.length-1] == 0xd9)//jpg
if(data.toString('utf8', 24, 28) === 'webm')//video webm
if(data.toString('utf8', 0, 4) === 'fLaC')//audio flac
*/
function castData(data, offset, size){
	let result = data.slice(offset+1, offset+size);
	if(data[offset] === 90){//Z
		result = zlib.inflateSync(result);
	}
	return result;
}

function*parse(data){
	for(let offset=0; offset<data.length;){
		const size = data.readUint32LE(offset+16);
		if(size > 30 && data.toString('utf8', offset+30, offset+34) === 'BLTE'){
			const payloadOffset = data.readUint32BE(offset+34);
			if(payloadOffset > 0){
				const count = data.readUint16BE(offset+40);
				const list = [];
				let t = offset+30+payloadOffset;
				for(let i=0; i<count; ++i){
					const cz = data.readUint32BE(offset+42+i*24);
					list.push(castData(data, t, cz));
					t += cz;
				}
				yield Buffer.concat(list);
			}else{
				yield castData(data, offset+38, size-38);
			}
		}
		offset += size;
	}
}

module.exports = parse;
